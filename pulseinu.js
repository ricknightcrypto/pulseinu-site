const PINU_ABI = {
  contractName: "PulseInu",
  abi: [
    {
      inputs: [],
      stateMutability: "nonpayable",
      type: "constructor",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "Approval",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "Claim",
      type: "event",
    },
    {
      anonymous: false,
      inputs: [
        {
          indexed: true,
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          indexed: true,
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          indexed: false,
          internalType: "uint256",
          name: "value",
          type: "uint256",
        },
      ],
      name: "Transfer",
      type: "event",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "owner",
          type: "address",
        },
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
      ],
      name: "allowance",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "approve",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "account",
          type: "address",
        },
      ],
      name: "balanceOf",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "subtractedValue",
          type: "uint256",
        },
      ],
      name: "decreaseAllowance",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "",
          type: "address",
        },
      ],
      name: "hasClaimed",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "spender",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "addedValue",
          type: "uint256",
        },
      ],
      name: "increaseAllowance",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "name",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "symbol",
      outputs: [
        {
          internalType: "string",
          name: "",
          type: "string",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "totalSupply",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "transfer",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "from",
          type: "address",
        },
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "uint256",
          name: "amount",
          type: "uint256",
        },
      ],
      name: "transferFrom",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [],
      name: "decimals",
      outputs: [
        {
          internalType: "uint8",
          name: "",
          type: "uint8",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "launchTime",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "numberOfClaims",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "currentDay",
      outputs: [
        {
          internalType: "uint256",
          name: "",
          type: "uint256",
        },
      ],
      stateMutability: "view",
      type: "function",
      constant: true,
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "hexAddr",
          type: "address",
        },
        {
          internalType: "bytes32[]",
          name: "proof",
          type: "bytes32[]",
        },
      ],
      name: "hexAddressIsClaimable",
      outputs: [
        {
          internalType: "bool",
          name: "",
          type: "bool",
        },
      ],
      stateMutability: "pure",
      type: "function",
      constant: true,
    },
    {
      inputs: [],
      name: "mintBaTokens",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
    {
      inputs: [
        {
          internalType: "address",
          name: "to",
          type: "address",
        },
        {
          internalType: "bytes32[]",
          name: "proof",
          type: "bytes32[]",
        },
      ],
      name: "claim",
      outputs: [],
      stateMutability: "nonpayable",
      type: "function",
    },
  ],
  metadata:
    '{"compiler":{"version":"0.8.13+commit.abaa5c0e"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Claim","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"currentDay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"hexAddr","type":"address"},{"internalType":"bytes32[]","name":"proof","type":"bytes32[]"}],"name":"hexAddressIsClaimable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"launchTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"mintBaTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"numberOfClaims","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Claim(address,uint256)":{"details":"Emitted after a successful token claim","params":{"amount":"of tokens claimed","to":"recipient of claim"}}},"kind":"dev","methods":{"allowance(address,address)":{"details":"See {IERC20-allowance}."},"approve(address,uint256)":{"details":"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."},"balanceOf(address)":{"details":"See {IERC20-balanceOf}."},"decreaseAllowance(address,uint256)":{"details":"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."},"increaseAllowance(address,uint256)":{"details":"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."},"name()":{"details":"Returns the name of the token."},"symbol()":{"details":"Returns the symbol of the token, usually a shorter version of the name."},"totalSupply()":{"details":"See {IERC20-totalSupply}."},"transfer(address,uint256)":{"details":"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."},"transferFrom(address,address,uint256)":{"details":"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``\'s tokens of at least `amount`."}},"version":1},"userdoc":{"kind":"user","methods":{"decimals()":{"notice":"============== Functions =============="},"hasClaimed(address)":{"notice":"============== Mutable Storage =============="}},"version":1}},"settings":{"compilationTarget":{"project:/contracts/PulseInu.sol":"PulseInu"},"evmVersion":"london","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":false,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"keccak256":"0x596ed72a251d391b814a4aa19d7acb02ebdcc92ba27d3fff74a6f0c158b12ab7","license":"MIT","urls":["bzz-raw://d5f49013d50b1011c842f76e96f3c3f146ca7cb15084c8805575e0e0e1a5c700","dweb:/ipfs/QmQ3n5qiuioUA74heD6ZddNkYg1kYihjQBNcy9zgwYXKgM"]},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"keccak256":"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e","license":"MIT","urls":["bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65","dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN"]},"openzeppelin-solidity/contracts/token/ERC20/ERC20.sol":{"keccak256":"0xe0c8b625a79bac0fe80f17cfb521e072805cc9cef1c96a5caf45b264e74812fa","license":"MIT","urls":["bzz-raw://12fd1efc9ad061ef675bd50fb0c8e3c6f2952a09f8df0e3c688b8d81b8918838","dweb:/ipfs/QmawN6PjTwy91pU7ANjCSgbsLc8TDA6hwu9GsFFaNSuhb5"]},"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b","license":"MIT","urls":["bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34","dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"]},"openzeppelin-solidity/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca","license":"MIT","urls":["bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd","dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"]},"openzeppelin-solidity/contracts/utils/Context.sol":{"keccak256":"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7","license":"MIT","urls":["bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92","dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"]},"project:/contracts/PulseInu.sol":{"keccak256":"0xd0a6b3239ce55a9d5ffee408176122361cdd40ed82964f9b278b420b40928d30","urls":["bzz-raw://34749ec703a0e05f67e2c0e35043b63fb86bb7eab268e54825a731213cf3e18f","dweb:/ipfs/QmQu8mjqhZBwo5fTniviHt96PGptqUW7CtAKCkAPTmvLWs"]}},"version":1}',
  bytecode:
    "0x60806040523480156200001157600080fd5b506040518060400160405280600881526020017f50756c7365496e750000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f50494e5500000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620000bf565b508060049080519060200190620000af929190620000bf565b50505042600581905550620001d3565b828054620000cd906200019e565b90600052602060002090601f016020900481019282620000f157600085556200013d565b82601f106200010c57805160ff19168380011785556200013d565b828001600101855582156200013d579182015b828111156200013c5782518255916020019190600101906200011f565b5b5090506200014c919062000150565b5090565b5b808211156200016b57600081600090555060010162000151565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620001b757607f821691505b602082108103620001cd57620001cc6200016f565b5b50919050565b61212580620001e36000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a457c2d711610071578063a457c2d7146102f9578063a9059cbb14610329578063d7aada8114610359578063dd62ed3e14610375578063ee993375146103a557610116565b806370a082311461025d57806373b2e80e1461028d578063790ca413146102bd57806395d89b41146102db57610116565b806323b872dd116100e957806323b872dd146101b7578063313ce567146101e757806339509351146102055780635c9302c91461023557806366b9a4bb1461025357610116565b806306fdde031461011b578063095ea7b3146101395780631456d8aa1461016957806318160ddd14610199575b600080fd5b6101236103c3565b60405161013091906112c0565b60405180910390f35b610153600480360381019061014e919061138a565b610455565b60405161016091906113e5565b60405180910390f35b610183600480360381019061017e919061157e565b610478565b60405161019091906113e5565b60405180910390f35b6101a161048c565b6040516101ae91906115e9565b60405180910390f35b6101d160048036038101906101cc9190611604565b610496565b6040516101de91906113e5565b60405180910390f35b6101ef6104c5565b6040516101fc9190611673565b60405180910390f35b61021f600480360381019061021a919061138a565b6104ce565b60405161022c91906113e5565b60405180910390f35b61023d610505565b60405161024a91906115e9565b60405180910390f35b61025b610514565b005b6102776004803603810190610272919061168e565b6105f1565b60405161028491906115e9565b60405180910390f35b6102a760048036038101906102a2919061168e565b610639565b6040516102b491906113e5565b60405180910390f35b6102c5610659565b6040516102d291906115e9565b60405180910390f35b6102e3610663565b6040516102f091906112c0565b60405180910390f35b610313600480360381019061030e919061138a565b6106f5565b60405161032091906113e5565b60405180910390f35b610343600480360381019061033e919061138a565b61076c565b60405161035091906113e5565b60405180910390f35b610373600480360381019061036e9190611716565b61078f565b005b61038f600480360381019061038a9190611776565b6109c6565b60405161039c91906115e9565b60405180910390f35b6103ad610a4d565b6040516103ba91906115e9565b60405180910390f35b6060600380546103d2906117e5565b80601f01602080910402602001604051908101604052809291908181526020018280546103fe906117e5565b801561044b5780601f106104205761010080835404028352916020019161044b565b820191906000526020600020905b81548152906001019060200180831161042e57829003601f168201915b5050505050905090565b600080610460610a57565b905061046d818585610a5f565b600191505092915050565b60006104848383610c28565b905092915050565b6000600254905090565b6000806104a1610a57565b90506104ae858285610c91565b6104b9858585610d1d565b60019150509392505050565b6000600c905090565b6000806104d9610a57565b90506104fa8185856104eb85896109c6565b6104f59190611845565b610a5f565b600191505092915050565b600061050f610f9c565b905090565b606461051e610f9c565b1161055e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610555906118e7565b60405180910390fd5b600760009054906101000a900460ff16156105ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105a590611979565b60405180910390fd5b6001600760006101000a81548160ff02191690831515021790555060006103e890506105ee73e8088619b7796e7db519e36970e8de2568a1339782610fcd565b50565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60086020528060005260406000206000915054906101000a900460ff1681565b6000600554905090565b606060048054610672906117e5565b80601f016020809104026020016040519081016040528092919081815260200182805461069e906117e5565b80156106eb5780601f106106c0576101008083540402835291602001916106eb565b820191906000526020600020905b8154815290600101906020018083116106ce57829003601f168201915b5050505050905090565b600080610700610a57565b9050600061070e82866109c6565b905083811015610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a90611a0b565b60405180910390fd5b6107608286868403610a5f565b60019250505092915050565b600080610777610a57565b9050610784818585610d1d565b600191505092915050565b6064610799610f9c565b11156107da576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d190611a77565b60405180910390fd5b600860008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610867576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085e90611ae3565b60405180910390fd5b6108b283838380806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050610c28565b6108f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e890611b4f565b60405180910390fd5b6001600860008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555061095f600160065461112c90919063ffffffff16565b600681905550610971836103e8610fcd565b8273ffffffffffffffffffffffffffffffffffffffff167f47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d46103e86040516109b99190611bb4565b60405180910390a2505050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b6000600654905090565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ace576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ac590611c41565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b3490611cd3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610c1b91906115e9565b60405180910390a3505050565b60008083604051602001610c3c9190611d3b565b6040516020818303038152906040528051906020012090506000610c84847f8f4e1c18aa0323d567b9abc6cf64f9626e82ef1b41a404b3f48bfa92eecb914260001b84611142565b9050809250505092915050565b6000610c9d84846109c6565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610d175781811015610d09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0090611da2565b60405180910390fd5b610d168484848403610a5f565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8390611e34565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610dfb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df290611ec6565b60405180910390fd5b610e06838383611159565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610e8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e8390611f58565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610f1f9190611845565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610f8391906115e9565b60405180910390a3610f9684848461115e565b50505050565b6000610fc862015180610fba6005544261116390919063ffffffff16565b61117990919063ffffffff16565b905090565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361103c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161103390611fc4565b60405180910390fd5b61104860008383611159565b806002600082825461105a9190611845565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110af9190611845565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161111491906115e9565b60405180910390a36111286000838361115e565b5050565b6000818361113a9190611845565b905092915050565b60008261114f858461118f565b1490509392505050565b505050565b505050565b600081836111719190611fe4565b905092915050565b600081836111879190612047565b905092915050565b60008082905060005b84518110156111da576111c5828683815181106111b8576111b7612078565b5b60200260200101516111e5565b915080806111d2906120a7565b915050611198565b508091505092915050565b60008183106111fd576111f88284611210565b611208565b6112078383611210565b5b905092915050565b600082600052816020526040600020905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611261578082015181840152602081019050611246565b83811115611270576000848401525b50505050565b6000601f19601f8301169050919050565b600061129282611227565b61129c8185611232565b93506112ac818560208601611243565b6112b581611276565b840191505092915050565b600060208201905081810360008301526112da8184611287565b905092915050565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611321826112f6565b9050919050565b61133181611316565b811461133c57600080fd5b50565b60008135905061134e81611328565b92915050565b6000819050919050565b61136781611354565b811461137257600080fd5b50565b6000813590506113848161135e565b92915050565b600080604083850312156113a1576113a06112ec565b5b60006113af8582860161133f565b92505060206113c085828601611375565b9150509250929050565b60008115159050919050565b6113df816113ca565b82525050565b60006020820190506113fa60008301846113d6565b92915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61143d82611276565b810181811067ffffffffffffffff8211171561145c5761145b611405565b5b80604052505050565b600061146f6112e2565b905061147b8282611434565b919050565b600067ffffffffffffffff82111561149b5761149a611405565b5b602082029050602081019050919050565b600080fd5b6000819050919050565b6114c4816114b1565b81146114cf57600080fd5b50565b6000813590506114e1816114bb565b92915050565b60006114fa6114f584611480565b611465565b9050808382526020820190506020840283018581111561151d5761151c6114ac565b5b835b81811015611546578061153288826114d2565b84526020840193505060208101905061151f565b5050509392505050565b600082601f83011261156557611564611400565b5b81356115758482602086016114e7565b91505092915050565b60008060408385031215611595576115946112ec565b5b60006115a38582860161133f565b925050602083013567ffffffffffffffff8111156115c4576115c36112f1565b5b6115d085828601611550565b9150509250929050565b6115e381611354565b82525050565b60006020820190506115fe60008301846115da565b92915050565b60008060006060848603121561161d5761161c6112ec565b5b600061162b8682870161133f565b935050602061163c8682870161133f565b925050604061164d86828701611375565b9150509250925092565b600060ff82169050919050565b61166d81611657565b82525050565b60006020820190506116886000830184611664565b92915050565b6000602082840312156116a4576116a36112ec565b5b60006116b28482850161133f565b91505092915050565b600080fd5b60008083601f8401126116d6576116d5611400565b5b8235905067ffffffffffffffff8111156116f3576116f26116bb565b5b60208301915083602082028301111561170f5761170e6114ac565b5b9250929050565b60008060006040848603121561172f5761172e6112ec565b5b600061173d8682870161133f565b935050602084013567ffffffffffffffff81111561175e5761175d6112f1565b5b61176a868287016116c0565b92509250509250925092565b6000806040838503121561178d5761178c6112ec565b5b600061179b8582860161133f565b92505060206117ac8582860161133f565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806117fd57607f821691505b6020821081036118105761180f6117b6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061185082611354565b915061185b83611354565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156118905761188f611816565b5b828201905092915050565b7f436c61696d20706861736520686173206e6f7420656e6465642e000000000000600082015250565b60006118d1601a83611232565b91506118dc8261189b565b602082019050919050565b60006020820190508181036000830152611900816118c4565b9050919050565b7f42656e65766f6c656e74204164647265737320546f6b656e732068617665206160008201527f6c7265616479206265656e206d696e7465642e00000000000000000000000000602082015250565b6000611963603383611232565b915061196e82611907565b604082019050919050565b6000602082019050818103600083015261199281611956565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006119f5602583611232565b9150611a0082611999565b604082019050919050565b60006020820190508181036000830152611a24816119e8565b9050919050565b7f436c61696d2070686173652068617320656e6465642e00000000000000000000600082015250565b6000611a61601683611232565b9150611a6c82611a2b565b602082019050919050565b60006020820190508181036000830152611a9081611a54565b9050919050565b7f416464726573732068617320616c726561647920636c61696d65642e00000000600082015250565b6000611acd601c83611232565b9150611ad882611a97565b602082019050919050565b60006020820190508181036000830152611afc81611ac0565b9050919050565b7f4845582041646472657373206973206e6f7420636c61696d61626c652e000000600082015250565b6000611b39601d83611232565b9150611b4482611b03565b602082019050919050565b60006020820190508181036000830152611b6881611b2c565b9050919050565b6000819050919050565b6000819050919050565b6000611b9e611b99611b9484611b6f565b611b79565b611354565b9050919050565b611bae81611b83565b82525050565b6000602082019050611bc96000830184611ba5565b92915050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611c2b602483611232565b9150611c3682611bcf565b604082019050919050565b60006020820190508181036000830152611c5a81611c1e565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000611cbd602283611232565b9150611cc882611c61565b604082019050919050565b60006020820190508181036000830152611cec81611cb0565b9050919050565b60008160601b9050919050565b6000611d0b82611cf3565b9050919050565b6000611d1d82611d00565b9050919050565b611d35611d3082611316565b611d12565b82525050565b6000611d478284611d24565b60148201915081905092915050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611d8c601d83611232565b9150611d9782611d56565b602082019050919050565b60006020820190508181036000830152611dbb81611d7f565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b6000611e1e602583611232565b9150611e2982611dc2565b604082019050919050565b60006020820190508181036000830152611e4d81611e11565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611eb0602383611232565b9150611ebb82611e54565b604082019050919050565b60006020820190508181036000830152611edf81611ea3565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611f42602683611232565b9150611f4d82611ee6565b604082019050919050565b60006020820190508181036000830152611f7181611f35565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611fae601f83611232565b9150611fb982611f78565b602082019050919050565b60006020820190508181036000830152611fdd81611fa1565b9050919050565b6000611fef82611354565b9150611ffa83611354565b92508282101561200d5761200c611816565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061205282611354565b915061205d83611354565b92508261206d5761206c612018565b5b828204905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006120b282611354565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036120e4576120e3611816565b5b60018201905091905056fea2646970667358221220e9ed0f471db7d667b9deecc66c6dc461fe5f200ffb0bc7e0f74da3818528af7764736f6c634300080d0033",
  deployedBytecode:
    "",
  immutableReferences: {},
  generatedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:516:7",
        statements: [
          {
            body: {
              nodeType: "YulBlock",
              src: "35:152:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "52:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "55:77:7",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "45:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "45:88:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "45:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "149:1:7",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "152:4:7",
                        type: "",
                        value: "0x22",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "142:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "142:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "142:15:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "173:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "176:4:7",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "166:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "166:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "166:15:7",
                },
              ],
            },
            name: "panic_error_0x22",
            nodeType: "YulFunctionDefinition",
            src: "7:180:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "244:269:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "254:22:7",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "268:4:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "274:1:7",
                        type: "",
                        value: "2",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "264:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "264:12:7",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "254:6:7",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "285:38:7",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "315:4:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "321:1:7",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "311:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "311:12:7",
                  },
                  variables: [
                    {
                      name: "outOfPlaceEncoding",
                      nodeType: "YulTypedName",
                      src: "289:18:7",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "362:51:7",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "376:27:7",
                        value: {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "390:6:7",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "398:4:7",
                              type: "",
                              value: "0x7f",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "386:3:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "386:17:7",
                        },
                        variableNames: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "376:6:7",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "342:18:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "335:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "335:26:7",
                  },
                  nodeType: "YulIf",
                  src: "332:81:7",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "465:42:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x22",
                            nodeType: "YulIdentifier",
                            src: "479:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "479:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "479:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "429:18:7",
                      },
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "452:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "460:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "449:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "449:14:7",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "426:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "426:38:7",
                  },
                  nodeType: "YulIf",
                  src: "423:84:7",
                },
              ],
            },
            name: "extract_byte_array_length",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "data",
                nodeType: "YulTypedName",
                src: "228:4:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "237:6:7",
                type: "",
              },
            ],
            src: "193:320:7",
          },
        ],
      },
      contents:
        "{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      id: 7,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  deployedGeneratedSources: [
    {
      ast: {
        nodeType: "YulBlock",
        src: "0:27039:7",
        statements: [
          {
            body: {
              nodeType: "YulBlock",
              src: "66:40:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "77:22:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "93:5:7",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "87:5:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "87:12:7",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "77:6:7",
                    },
                  ],
                },
              ],
            },
            name: "array_length_t_string_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "49:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "59:6:7",
                type: "",
              },
            ],
            src: "7:99:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "208:73:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "225:3:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "230:6:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "218:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "218:19:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "218:19:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "246:29:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "265:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "270:4:7",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "261:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "261:14:7",
                  },
                  variableNames: [
                    {
                      name: "updated_pos",
                      nodeType: "YulIdentifier",
                      src: "246:11:7",
                    },
                  ],
                },
              ],
            },
            name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "180:3:7",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "185:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "updated_pos",
                nodeType: "YulTypedName",
                src: "196:11:7",
                type: "",
              },
            ],
            src: "112:169:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "336:258:7",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "346:10:7",
                  value: {
                    kind: "number",
                    nodeType: "YulLiteral",
                    src: "355:1:7",
                    type: "",
                    value: "0",
                  },
                  variables: [
                    {
                      name: "i",
                      nodeType: "YulTypedName",
                      src: "350:1:7",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "415:63:7",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "dst",
                                  nodeType: "YulIdentifier",
                                  src: "440:3:7",
                                },
                                {
                                  name: "i",
                                  nodeType: "YulIdentifier",
                                  src: "445:1:7",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "436:3:7",
                              },
                              nodeType: "YulFunctionCall",
                              src: "436:11:7",
                            },
                            {
                              arguments: [
                                {
                                  arguments: [
                                    {
                                      name: "src",
                                      nodeType: "YulIdentifier",
                                      src: "459:3:7",
                                    },
                                    {
                                      name: "i",
                                      nodeType: "YulIdentifier",
                                      src: "464:1:7",
                                    },
                                  ],
                                  functionName: {
                                    name: "add",
                                    nodeType: "YulIdentifier",
                                    src: "455:3:7",
                                  },
                                  nodeType: "YulFunctionCall",
                                  src: "455:11:7",
                                },
                              ],
                              functionName: {
                                name: "mload",
                                nodeType: "YulIdentifier",
                                src: "449:5:7",
                              },
                              nodeType: "YulFunctionCall",
                              src: "449:18:7",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "429:6:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "429:39:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "429:39:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "376:1:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "379:6:7",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "373:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "373:13:7",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "387:19:7",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "389:15:7",
                        value: {
                          arguments: [
                            {
                              name: "i",
                              nodeType: "YulIdentifier",
                              src: "398:1:7",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "401:2:7",
                              type: "",
                              value: "32",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "394:3:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "394:10:7",
                        },
                        variableNames: [
                          {
                            name: "i",
                            nodeType: "YulIdentifier",
                            src: "389:1:7",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "369:3:7",
                    statements: [],
                  },
                  src: "365:113:7",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "512:76:7",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              arguments: [
                                {
                                  name: "dst",
                                  nodeType: "YulIdentifier",
                                  src: "562:3:7",
                                },
                                {
                                  name: "length",
                                  nodeType: "YulIdentifier",
                                  src: "567:6:7",
                                },
                              ],
                              functionName: {
                                name: "add",
                                nodeType: "YulIdentifier",
                                src: "558:3:7",
                              },
                              nodeType: "YulFunctionCall",
                              src: "558:16:7",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "576:1:7",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "551:6:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "551:27:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "551:27:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "i",
                        nodeType: "YulIdentifier",
                        src: "493:1:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "496:6:7",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "490:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "490:13:7",
                  },
                  nodeType: "YulIf",
                  src: "487:101:7",
                },
              ],
            },
            name: "copy_memory_to_memory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "src",
                nodeType: "YulTypedName",
                src: "318:3:7",
                type: "",
              },
              {
                name: "dst",
                nodeType: "YulTypedName",
                src: "323:3:7",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "328:6:7",
                type: "",
              },
            ],
            src: "287:307:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "648:54:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "658:38:7",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "676:5:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "683:2:7",
                            type: "",
                            value: "31",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "672:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "672:14:7",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "692:2:7",
                            type: "",
                            value: "31",
                          },
                        ],
                        functionName: {
                          name: "not",
                          nodeType: "YulIdentifier",
                          src: "688:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "688:7:7",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "668:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "668:28:7",
                  },
                  variableNames: [
                    {
                      name: "result",
                      nodeType: "YulIdentifier",
                      src: "658:6:7",
                    },
                  ],
                },
              ],
            },
            name: "round_up_to_mul_of_32",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "631:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "result",
                nodeType: "YulTypedName",
                src: "641:6:7",
                type: "",
              },
            ],
            src: "600:102:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "800:272:7",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "810:53:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "857:5:7",
                      },
                    ],
                    functionName: {
                      name: "array_length_t_string_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "824:32:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "824:39:7",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "814:6:7",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "872:78:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "938:3:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "943:6:7",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "879:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "879:71:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "872:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "985:5:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "992:4:7",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "981:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "981:16:7",
                      },
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "999:3:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "1004:6:7",
                      },
                    ],
                    functionName: {
                      name: "copy_memory_to_memory",
                      nodeType: "YulIdentifier",
                      src: "959:21:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "959:52:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "959:52:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1020:46:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "1031:3:7",
                      },
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "1058:6:7",
                          },
                        ],
                        functionName: {
                          name: "round_up_to_mul_of_32",
                          nodeType: "YulIdentifier",
                          src: "1036:21:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1036:29:7",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "1027:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1027:39:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "1020:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "781:5:7",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "788:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "796:3:7",
                type: "",
              },
            ],
            src: "708:364:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1196:195:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1206:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "1218:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1229:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "1214:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1214:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "1206:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1253:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "1264:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "1249:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1249:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "1272:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "1278:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "1268:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "1268:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "1242:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1242:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1242:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "1298:86:7",
                  value: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "1370:6:7",
                      },
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "1379:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "1306:63:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1306:78:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "1298:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "1168:9:7",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "1180:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "1191:4:7",
                type: "",
              },
            ],
            src: "1078:313:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1437:35:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1447:19:7",
                  value: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1463:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "mload",
                      nodeType: "YulIdentifier",
                      src: "1457:5:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1457:9:7",
                  },
                  variableNames: [
                    {
                      name: "memPtr",
                      nodeType: "YulIdentifier",
                      src: "1447:6:7",
                    },
                  ],
                },
              ],
            },
            name: "allocate_unbounded",
            nodeType: "YulFunctionDefinition",
            returnVariables: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "1430:6:7",
                type: "",
              },
            ],
            src: "1397:75:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1567:28:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1584:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1587:1:7",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "1577:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1577:12:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1577:12:7",
                },
              ],
            },
            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            nodeType: "YulFunctionDefinition",
            src: "1478:117:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1690:28:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1707:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1710:1:7",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "1700:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1700:12:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "1700:12:7",
                },
              ],
            },
            name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            nodeType: "YulFunctionDefinition",
            src: "1601:117:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1769:81:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1779:65:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "1794:5:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "1801:42:7",
                        type: "",
                        value: "0xffffffffffffffffffffffffffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "1790:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1790:54:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "1779:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_uint160",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "1751:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "1761:7:7",
                type: "",
              },
            ],
            src: "1724:126:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "1901:51:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "1911:35:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "1940:5:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint160",
                      nodeType: "YulIdentifier",
                      src: "1922:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "1922:24:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "1911:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "1883:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "1893:7:7",
                type: "",
              },
            ],
            src: "1856:96:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2001:79:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2058:16:7",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2067:1:7",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2070:1:7",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2060:6:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2060:12:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2060:12:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "2024:5:7",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "2049:5:7",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_address",
                              nodeType: "YulIdentifier",
                              src: "2031:17:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2031:24:7",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "2021:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2021:35:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "2014:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2014:43:7",
                  },
                  nodeType: "YulIf",
                  src: "2011:63:7",
                },
              ],
            },
            name: "validator_revert_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "1994:5:7",
                type: "",
              },
            ],
            src: "1958:122:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2138:87:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2148:29:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "2170:6:7",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2157:12:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2157:20:7",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "2148:5:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "2213:5:7",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_address",
                      nodeType: "YulIdentifier",
                      src: "2186:26:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2186:33:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2186:33:7",
                },
              ],
            },
            name: "abi_decode_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "2116:6:7",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "2124:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "2132:5:7",
                type: "",
              },
            ],
            src: "2086:139:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2276:32:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2286:16:7",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "2297:5:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "2286:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "2258:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "2268:7:7",
                type: "",
              },
            ],
            src: "2231:77:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2357:79:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2414:16:7",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2423:1:7",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "2426:1:7",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "2416:6:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2416:12:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2416:12:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "2380:5:7",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "2405:5:7",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_uint256",
                              nodeType: "YulIdentifier",
                              src: "2387:17:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2387:24:7",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "2377:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2377:35:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "2370:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2370:43:7",
                  },
                  nodeType: "YulIf",
                  src: "2367:63:7",
                },
              ],
            },
            name: "validator_revert_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "2350:5:7",
                type: "",
              },
            ],
            src: "2314:122:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2494:87:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "2504:29:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "2526:6:7",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "2513:12:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2513:20:7",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "2504:5:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "2569:5:7",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "2542:26:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2542:33:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "2542:33:7",
                },
              ],
            },
            name: "abi_decode_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "2472:6:7",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "2480:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "2488:5:7",
                type: "",
              },
            ],
            src: "2442:139:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "2670:391:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "2716:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            nodeType: "YulIdentifier",
                            src: "2718:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "2718:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "2718:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2691:7:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "2700:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "2687:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2687:23:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2712:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "2683:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "2683:32:7",
                  },
                  nodeType: "YulIf",
                  src: "2680:119:7",
                },
                {
                  nodeType: "YulBlock",
                  src: "2809:117:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "2824:15:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2838:1:7",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "2828:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "2853:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "2888:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "2899:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "2884:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "2884:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "2908:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "2863:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2863:53:7",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "2853:6:7",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "2936:118:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "2951:16:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "2965:2:7",
                        type: "",
                        value: "32",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "2955:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "2981:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "3016:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "3027:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "3012:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "3012:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "3036:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "2991:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "2991:53:7",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "2981:6:7",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "2632:9:7",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "2643:7:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "2655:6:7",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "2663:6:7",
                type: "",
              },
            ],
            src: "2587:474:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3109:48:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "3119:32:7",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "3144:5:7",
                          },
                        ],
                        functionName: {
                          name: "iszero",
                          nodeType: "YulIdentifier",
                          src: "3137:6:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3137:13:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "3130:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3130:21:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "3119:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_bool",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3091:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "3101:7:7",
                type: "",
              },
            ],
            src: "3067:90:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3222:50:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "3239:3:7",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "3259:5:7",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_bool",
                          nodeType: "YulIdentifier",
                          src: "3244:14:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3244:21:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3232:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3232:34:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3232:34:7",
                },
              ],
            },
            name: "abi_encode_t_bool_to_t_bool_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "3210:5:7",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "3217:3:7",
                type: "",
              },
            ],
            src: "3163:109:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3370:118:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "3380:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "3392:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3403:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3388:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3388:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "3380:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "3454:6:7",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "3467:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3478:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "3463:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3463:17:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_bool_to_t_bool_fromStack",
                      nodeType: "YulIdentifier",
                      src: "3416:37:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3416:65:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3416:65:7",
                },
              ],
            },
            name: "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "3342:9:7",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "3354:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "3365:4:7",
                type: "",
              },
            ],
            src: "3278:210:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3583:28:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3600:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3603:1:7",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "3593:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3593:12:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3593:12:7",
                },
              ],
            },
            name: "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            nodeType: "YulFunctionDefinition",
            src: "3494:117:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3645:152:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3662:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3665:77:7",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3655:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3655:88:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3655:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3759:1:7",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3762:4:7",
                        type: "",
                        value: "0x41",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "3752:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3752:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3752:15:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3783:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "3786:4:7",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "3776:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3776:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "3776:15:7",
                },
              ],
            },
            name: "panic_error_0x41",
            nodeType: "YulFunctionDefinition",
            src: "3617:180:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "3846:238:7",
              statements: [
                {
                  nodeType: "YulVariableDeclaration",
                  src: "3856:58:7",
                  value: {
                    arguments: [
                      {
                        name: "memPtr",
                        nodeType: "YulIdentifier",
                        src: "3878:6:7",
                      },
                      {
                        arguments: [
                          {
                            name: "size",
                            nodeType: "YulIdentifier",
                            src: "3908:4:7",
                          },
                        ],
                        functionName: {
                          name: "round_up_to_mul_of_32",
                          nodeType: "YulIdentifier",
                          src: "3886:21:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3886:27:7",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "3874:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3874:40:7",
                  },
                  variables: [
                    {
                      name: "newFreePtr",
                      nodeType: "YulTypedName",
                      src: "3860:10:7",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4025:22:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x41",
                            nodeType: "YulIdentifier",
                            src: "4027:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4027:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4027:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulIdentifier",
                            src: "3968:10:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "3980:18:7",
                            type: "",
                            value: "0xffffffffffffffff",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "3965:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "3965:34:7",
                      },
                      {
                        arguments: [
                          {
                            name: "newFreePtr",
                            nodeType: "YulIdentifier",
                            src: "4004:10:7",
                          },
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "4016:6:7",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "4001:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4001:22:7",
                      },
                    ],
                    functionName: {
                      name: "or",
                      nodeType: "YulIdentifier",
                      src: "3962:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "3962:62:7",
                  },
                  nodeType: "YulIf",
                  src: "3959:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4063:2:7",
                        type: "",
                        value: "64",
                      },
                      {
                        name: "newFreePtr",
                        nodeType: "YulIdentifier",
                        src: "4067:10:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "4056:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4056:22:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4056:22:7",
                },
              ],
            },
            name: "finalize_allocation",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "3832:6:7",
                type: "",
              },
              {
                name: "size",
                nodeType: "YulTypedName",
                src: "3840:4:7",
                type: "",
              },
            ],
            src: "3803:281:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4131:88:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "4141:30:7",
                  value: {
                    arguments: [],
                    functionName: {
                      name: "allocate_unbounded",
                      nodeType: "YulIdentifier",
                      src: "4151:18:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4151:20:7",
                  },
                  variableNames: [
                    {
                      name: "memPtr",
                      nodeType: "YulIdentifier",
                      src: "4141:6:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "memPtr",
                        nodeType: "YulIdentifier",
                        src: "4200:6:7",
                      },
                      {
                        name: "size",
                        nodeType: "YulIdentifier",
                        src: "4208:4:7",
                      },
                    ],
                    functionName: {
                      name: "finalize_allocation",
                      nodeType: "YulIdentifier",
                      src: "4180:19:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4180:33:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4180:33:7",
                },
              ],
            },
            name: "allocate_memory",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "size",
                nodeType: "YulTypedName",
                src: "4115:4:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "4124:6:7",
                type: "",
              },
            ],
            src: "4090:129:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4307:229:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4412:22:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x41",
                            nodeType: "YulIdentifier",
                            src: "4414:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4414:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4414:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "4384:6:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4392:18:7",
                        type: "",
                        value: "0xffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "4381:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4381:30:7",
                  },
                  nodeType: "YulIf",
                  src: "4378:56:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "4444:25:7",
                  value: {
                    arguments: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "4456:6:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4464:4:7",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "mul",
                      nodeType: "YulIdentifier",
                      src: "4452:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4452:17:7",
                  },
                  variableNames: [
                    {
                      name: "size",
                      nodeType: "YulIdentifier",
                      src: "4444:4:7",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "4506:23:7",
                  value: {
                    arguments: [
                      {
                        name: "size",
                        nodeType: "YulIdentifier",
                        src: "4518:4:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4524:4:7",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "4514:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4514:15:7",
                  },
                  variableNames: [
                    {
                      name: "size",
                      nodeType: "YulIdentifier",
                      src: "4506:4:7",
                    },
                  ],
                },
              ],
            },
            name: "array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "4291:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "size",
                nodeType: "YulTypedName",
                src: "4302:4:7",
                type: "",
              },
            ],
            src: "4225:311:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4631:28:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4648:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "4651:1:7",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "4641:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4641:12:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4641:12:7",
                },
              ],
            },
            name: "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
            nodeType: "YulFunctionDefinition",
            src: "4542:117:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4710:32:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "4720:16:7",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "4731:5:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "4720:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_bytes32",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4692:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "4702:7:7",
                type: "",
              },
            ],
            src: "4665:77:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4791:79:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "4848:16:7",
                    statements: [
                      {
                        expression: {
                          arguments: [
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4857:1:7",
                              type: "",
                              value: "0",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "4860:1:7",
                              type: "",
                              value: "0",
                            },
                          ],
                          functionName: {
                            name: "revert",
                            nodeType: "YulIdentifier",
                            src: "4850:6:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "4850:12:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "4850:12:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "4814:5:7",
                          },
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "4839:5:7",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_bytes32",
                              nodeType: "YulIdentifier",
                              src: "4821:17:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "4821:24:7",
                          },
                        ],
                        functionName: {
                          name: "eq",
                          nodeType: "YulIdentifier",
                          src: "4811:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "4811:35:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "4804:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4804:43:7",
                  },
                  nodeType: "YulIf",
                  src: "4801:63:7",
                },
              ],
            },
            name: "validator_revert_t_bytes32",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4784:5:7",
                type: "",
              },
            ],
            src: "4748:122:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "4928:87:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "4938:29:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "4960:6:7",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "4947:12:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4947:20:7",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "4938:5:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "5003:5:7",
                      },
                    ],
                    functionName: {
                      name: "validator_revert_t_bytes32",
                      nodeType: "YulIdentifier",
                      src: "4976:26:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "4976:33:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "4976:33:7",
                },
              ],
            },
            name: "abi_decode_t_bytes32",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "4906:6:7",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "4914:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "4922:5:7",
                type: "",
              },
            ],
            src: "4876:139:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5140:608:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "5150:90:7",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "5232:6:7",
                          },
                        ],
                        functionName: {
                          name: "array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr",
                          nodeType: "YulIdentifier",
                          src: "5175:56:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5175:64:7",
                      },
                    ],
                    functionName: {
                      name: "allocate_memory",
                      nodeType: "YulIdentifier",
                      src: "5159:15:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5159:81:7",
                  },
                  variableNames: [
                    {
                      name: "array",
                      nodeType: "YulIdentifier",
                      src: "5150:5:7",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5249:16:7",
                  value: {
                    name: "array",
                    nodeType: "YulIdentifier",
                    src: "5260:5:7",
                  },
                  variables: [
                    {
                      name: "dst",
                      nodeType: "YulTypedName",
                      src: "5253:3:7",
                      type: "",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "array",
                        nodeType: "YulIdentifier",
                        src: "5282:5:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "5289:6:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "5275:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5275:21:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "5275:21:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "5305:23:7",
                  value: {
                    arguments: [
                      {
                        name: "array",
                        nodeType: "YulIdentifier",
                        src: "5316:5:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "5323:4:7",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5312:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5312:16:7",
                  },
                  variableNames: [
                    {
                      name: "dst",
                      nodeType: "YulIdentifier",
                      src: "5305:3:7",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5338:44:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "5356:6:7",
                      },
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "5368:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "5376:4:7",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "mul",
                          nodeType: "YulIdentifier",
                          src: "5364:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5364:17:7",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "5352:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5352:30:7",
                  },
                  variables: [
                    {
                      name: "srcEnd",
                      nodeType: "YulTypedName",
                      src: "5342:6:7",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5410:103:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            nodeType: "YulIdentifier",
                            src: "5424:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5424:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5424:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "srcEnd",
                        nodeType: "YulIdentifier",
                        src: "5397:6:7",
                      },
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "5405:3:7",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "5394:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5394:15:7",
                  },
                  nodeType: "YulIf",
                  src: "5391:122:7",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5598:144:7",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "5613:21:7",
                        value: {
                          name: "src",
                          nodeType: "YulIdentifier",
                          src: "5631:3:7",
                        },
                        variables: [
                          {
                            name: "elementPos",
                            nodeType: "YulTypedName",
                            src: "5617:10:7",
                            type: "",
                          },
                        ],
                      },
                      {
                        expression: {
                          arguments: [
                            {
                              name: "dst",
                              nodeType: "YulIdentifier",
                              src: "5655:3:7",
                            },
                            {
                              arguments: [
                                {
                                  name: "elementPos",
                                  nodeType: "YulIdentifier",
                                  src: "5681:10:7",
                                },
                                {
                                  name: "end",
                                  nodeType: "YulIdentifier",
                                  src: "5693:3:7",
                                },
                              ],
                              functionName: {
                                name: "abi_decode_t_bytes32",
                                nodeType: "YulIdentifier",
                                src: "5660:20:7",
                              },
                              nodeType: "YulFunctionCall",
                              src: "5660:37:7",
                            },
                          ],
                          functionName: {
                            name: "mstore",
                            nodeType: "YulIdentifier",
                            src: "5648:6:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5648:50:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5648:50:7",
                      },
                      {
                        nodeType: "YulAssignment",
                        src: "5711:21:7",
                        value: {
                          arguments: [
                            {
                              name: "dst",
                              nodeType: "YulIdentifier",
                              src: "5722:3:7",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5727:4:7",
                              type: "",
                              value: "0x20",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "5718:3:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5718:14:7",
                        },
                        variableNames: [
                          {
                            name: "dst",
                            nodeType: "YulIdentifier",
                            src: "5711:3:7",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "src",
                        nodeType: "YulIdentifier",
                        src: "5551:3:7",
                      },
                      {
                        name: "srcEnd",
                        nodeType: "YulIdentifier",
                        src: "5556:6:7",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "5548:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5548:15:7",
                  },
                  nodeType: "YulForLoop",
                  post: {
                    nodeType: "YulBlock",
                    src: "5564:25:7",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "5566:21:7",
                        value: {
                          arguments: [
                            {
                              name: "src",
                              nodeType: "YulIdentifier",
                              src: "5577:3:7",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "5582:4:7",
                              type: "",
                              value: "0x20",
                            },
                          ],
                          functionName: {
                            name: "add",
                            nodeType: "YulIdentifier",
                            src: "5573:3:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5573:14:7",
                        },
                        variableNames: [
                          {
                            name: "src",
                            nodeType: "YulIdentifier",
                            src: "5566:3:7",
                          },
                        ],
                      },
                    ],
                  },
                  pre: {
                    nodeType: "YulBlock",
                    src: "5526:21:7",
                    statements: [
                      {
                        nodeType: "YulVariableDeclaration",
                        src: "5528:17:7",
                        value: {
                          name: "offset",
                          nodeType: "YulIdentifier",
                          src: "5539:6:7",
                        },
                        variables: [
                          {
                            name: "src",
                            nodeType: "YulTypedName",
                            src: "5532:3:7",
                            type: "",
                          },
                        ],
                      },
                    ],
                  },
                  src: "5522:220:7",
                },
              ],
            },
            name: "abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "5110:6:7",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "5118:6:7",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "5126:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "array",
                nodeType: "YulTypedName",
                src: "5134:5:7",
                type: "",
              },
            ],
            src: "5038:710:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "5848:293:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "5897:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            nodeType: "YulIdentifier",
                            src: "5899:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "5899:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "5899:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "5876:6:7",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "5884:4:7",
                                type: "",
                                value: "0x1f",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "5872:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "5872:17:7",
                          },
                          {
                            name: "end",
                            nodeType: "YulIdentifier",
                            src: "5891:3:7",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "5868:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "5868:27:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "5861:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "5861:35:7",
                  },
                  nodeType: "YulIf",
                  src: "5858:122:7",
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "5989:34:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "6016:6:7",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "6003:12:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6003:20:7",
                  },
                  variables: [
                    {
                      name: "length",
                      nodeType: "YulTypedName",
                      src: "5993:6:7",
                      type: "",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "6032:103:7",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "offset",
                            nodeType: "YulIdentifier",
                            src: "6108:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6116:4:7",
                            type: "",
                            value: "0x20",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "6104:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6104:17:7",
                      },
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "6123:6:7",
                      },
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "6131:3:7",
                      },
                    ],
                    functionName: {
                      name: "abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr",
                      nodeType: "YulIdentifier",
                      src: "6041:62:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6041:94:7",
                  },
                  variableNames: [
                    {
                      name: "array",
                      nodeType: "YulIdentifier",
                      src: "6032:5:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_t_array$_t_bytes32_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "5826:6:7",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "5834:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "array",
                nodeType: "YulTypedName",
                src: "5842:5:7",
                type: "",
              },
            ],
            src: "5771:370:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6255:576:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "6301:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            nodeType: "YulIdentifier",
                            src: "6303:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "6303:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "6303:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "6276:7:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "6285:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "6272:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6272:23:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6297:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "6268:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6268:32:7",
                  },
                  nodeType: "YulIf",
                  src: "6265:119:7",
                },
                {
                  nodeType: "YulBlock",
                  src: "6394:117:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "6409:15:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "6423:1:7",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "6413:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "6438:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "6473:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "6484:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "6469:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "6469:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "6493:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "6448:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6448:53:7",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "6438:6:7",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "6521:303:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "6536:46:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "6567:9:7",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "6578:2:7",
                                type: "",
                                value: "32",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "6563:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "6563:18:7",
                          },
                        ],
                        functionName: {
                          name: "calldataload",
                          nodeType: "YulIdentifier",
                          src: "6550:12:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6550:32:7",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "6540:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      body: {
                        nodeType: "YulBlock",
                        src: "6629:83:7",
                        statements: [
                          {
                            expression: {
                              arguments: [],
                              functionName: {
                                name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                nodeType: "YulIdentifier",
                                src: "6631:77:7",
                              },
                              nodeType: "YulFunctionCall",
                              src: "6631:79:7",
                            },
                            nodeType: "YulExpressionStatement",
                            src: "6631:79:7",
                          },
                        ],
                      },
                      condition: {
                        arguments: [
                          {
                            name: "offset",
                            nodeType: "YulIdentifier",
                            src: "6601:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "6609:18:7",
                            type: "",
                            value: "0xffffffffffffffff",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "6598:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6598:30:7",
                      },
                      nodeType: "YulIf",
                      src: "6595:117:7",
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "6726:88:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "6786:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "6797:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "6782:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "6782:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "6806:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_array$_t_bytes32_$dyn_memory_ptr",
                          nodeType: "YulIdentifier",
                          src: "6736:45:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6736:78:7",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "6726:6:7",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "6217:9:7",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "6228:7:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "6240:6:7",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "6248:6:7",
                type: "",
              },
            ],
            src: "6147:684:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "6902:53:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "6919:3:7",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "6942:5:7",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "6924:17:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "6924:24:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "6912:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "6912:37:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "6912:37:7",
                },
              ],
            },
            name: "abi_encode_t_uint256_to_t_uint256_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "6890:5:7",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "6897:3:7",
                type: "",
              },
            ],
            src: "6837:118:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7059:124:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7069:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "7081:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7092:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "7077:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7077:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "7069:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "7149:6:7",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "7162:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "7173:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "7158:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7158:17:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_uint256_to_t_uint256_fromStack",
                      nodeType: "YulIdentifier",
                      src: "7105:43:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7105:71:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7105:71:7",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "7031:9:7",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "7043:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "7054:4:7",
                type: "",
              },
            ],
            src: "6961:222:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7289:519:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "7335:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            nodeType: "YulIdentifier",
                            src: "7337:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "7337:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "7337:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "7310:7:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "7319:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "7306:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7306:23:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7331:2:7",
                        type: "",
                        value: "96",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "7302:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7302:32:7",
                  },
                  nodeType: "YulIf",
                  src: "7299:119:7",
                },
                {
                  nodeType: "YulBlock",
                  src: "7428:117:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "7443:15:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7457:1:7",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "7447:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "7472:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "7507:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "7518:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "7503:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7503:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "7527:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "7482:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7482:53:7",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "7472:6:7",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "7555:118:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "7570:16:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7584:2:7",
                        type: "",
                        value: "32",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "7574:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "7600:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "7635:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "7646:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "7631:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7631:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "7655:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "7610:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7610:53:7",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "7600:6:7",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "7683:118:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "7698:16:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7712:2:7",
                        type: "",
                        value: "64",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "7702:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "7728:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "7763:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "7774:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "7759:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "7759:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "7783:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "7738:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7738:53:7",
                      },
                      variableNames: [
                        {
                          name: "value2",
                          nodeType: "YulIdentifier",
                          src: "7728:6:7",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_addresst_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "7243:9:7",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "7254:7:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "7266:6:7",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "7274:6:7",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "7282:6:7",
                type: "",
              },
            ],
            src: "7189:619:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7857:43:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "7867:27:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "7882:5:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "7889:4:7",
                        type: "",
                        value: "0xff",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "7878:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7878:16:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "7867:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_uint8",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "7839:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "7849:7:7",
                type: "",
              },
            ],
            src: "7814:86:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "7967:51:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "7984:3:7",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "8005:5:7",
                          },
                        ],
                        functionName: {
                          name: "cleanup_t_uint8",
                          nodeType: "YulIdentifier",
                          src: "7989:15:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "7989:22:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "7977:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "7977:35:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "7977:35:7",
                },
              ],
            },
            name: "abi_encode_t_uint8_to_t_uint8_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "7955:5:7",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "7962:3:7",
                type: "",
              },
            ],
            src: "7906:112:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8118:120:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "8128:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "8140:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8151:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "8136:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8136:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "8128:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "8204:6:7",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8217:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "8228:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "8213:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8213:17:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_uint8_to_t_uint8_fromStack",
                      nodeType: "YulIdentifier",
                      src: "8164:39:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8164:67:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8164:67:7",
                },
              ],
            },
            name: "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "8090:9:7",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "8102:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "8113:4:7",
                type: "",
              },
            ],
            src: "8024:214:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8310:263:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8356:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            nodeType: "YulIdentifier",
                            src: "8358:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8358:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8358:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "8331:7:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "8340:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "8327:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8327:23:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8352:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "8323:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8323:32:7",
                  },
                  nodeType: "YulIf",
                  src: "8320:119:7",
                },
                {
                  nodeType: "YulBlock",
                  src: "8449:117:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "8464:15:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8478:1:7",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "8468:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "8493:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "8528:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "8539:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "8524:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8524:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "8548:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "8503:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8503:53:7",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "8493:6:7",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "8280:9:7",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "8291:7:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "8303:6:7",
                type: "",
              },
            ],
            src: "8244:329:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8668:28:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8685:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "8688:1:7",
                        type: "",
                        value: "0",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "8678:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8678:12:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "8678:12:7",
                },
              ],
            },
            name: "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
            nodeType: "YulFunctionDefinition",
            src: "8579:117:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "8809:478:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "8858:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            nodeType: "YulIdentifier",
                            src: "8860:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "8860:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "8860:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "8837:6:7",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "8845:4:7",
                                type: "",
                                value: "0x1f",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "8833:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "8833:17:7",
                          },
                          {
                            name: "end",
                            nodeType: "YulIdentifier",
                            src: "8852:3:7",
                          },
                        ],
                        functionName: {
                          name: "slt",
                          nodeType: "YulIdentifier",
                          src: "8829:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "8829:27:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "8822:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8822:35:7",
                  },
                  nodeType: "YulIf",
                  src: "8819:122:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "8950:30:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "8973:6:7",
                      },
                    ],
                    functionName: {
                      name: "calldataload",
                      nodeType: "YulIdentifier",
                      src: "8960:12:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8960:20:7",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "8950:6:7",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9023:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
                            nodeType: "YulIdentifier",
                            src: "9025:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9025:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9025:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "length",
                        nodeType: "YulIdentifier",
                        src: "8995:6:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9003:18:7",
                        type: "",
                        value: "0xffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "8992:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "8992:30:7",
                  },
                  nodeType: "YulIf",
                  src: "8989:117:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "9115:29:7",
                  value: {
                    arguments: [
                      {
                        name: "offset",
                        nodeType: "YulIdentifier",
                        src: "9131:6:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9139:4:7",
                        type: "",
                        value: "0x20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "9127:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9127:17:7",
                  },
                  variableNames: [
                    {
                      name: "arrayPos",
                      nodeType: "YulIdentifier",
                      src: "9115:8:7",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9198:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
                            nodeType: "YulIdentifier",
                            src: "9200:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9200:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9200:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "arrayPos",
                            nodeType: "YulIdentifier",
                            src: "9163:8:7",
                          },
                          {
                            arguments: [
                              {
                                name: "length",
                                nodeType: "YulIdentifier",
                                src: "9177:6:7",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9185:4:7",
                                type: "",
                                value: "0x20",
                              },
                            ],
                            functionName: {
                              name: "mul",
                              nodeType: "YulIdentifier",
                              src: "9173:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9173:17:7",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "9159:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9159:32:7",
                      },
                      {
                        name: "end",
                        nodeType: "YulIdentifier",
                        src: "9193:3:7",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "9156:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9156:41:7",
                  },
                  nodeType: "YulIf",
                  src: "9153:128:7",
                },
              ],
            },
            name: "abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "offset",
                nodeType: "YulTypedName",
                src: "8776:6:7",
                type: "",
              },
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "8784:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "arrayPos",
                nodeType: "YulTypedName",
                src: "8792:8:7",
                type: "",
              },
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "8802:6:7",
                type: "",
              },
            ],
            src: "8719:568:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "9411:586:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "9457:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            nodeType: "YulIdentifier",
                            src: "9459:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "9459:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "9459:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "9432:7:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "9441:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "9428:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9428:23:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9453:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "9424:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "9424:32:7",
                  },
                  nodeType: "YulIf",
                  src: "9421:119:7",
                },
                {
                  nodeType: "YulBlock",
                  src: "9550:117:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "9565:15:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "9579:1:7",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "9569:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "9594:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "9629:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "9640:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9625:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9625:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "9649:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "9604:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9604:53:7",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "9594:6:7",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "9677:313:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "9692:46:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "9723:9:7",
                              },
                              {
                                kind: "number",
                                nodeType: "YulLiteral",
                                src: "9734:2:7",
                                type: "",
                                value: "32",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9719:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9719:18:7",
                          },
                        ],
                        functionName: {
                          name: "calldataload",
                          nodeType: "YulIdentifier",
                          src: "9706:12:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9706:32:7",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "9696:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      body: {
                        nodeType: "YulBlock",
                        src: "9785:83:7",
                        statements: [
                          {
                            expression: {
                              arguments: [],
                              functionName: {
                                name: "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                nodeType: "YulIdentifier",
                                src: "9787:77:7",
                              },
                              nodeType: "YulFunctionCall",
                              src: "9787:79:7",
                            },
                            nodeType: "YulExpressionStatement",
                            src: "9787:79:7",
                          },
                        ],
                      },
                      condition: {
                        arguments: [
                          {
                            name: "offset",
                            nodeType: "YulIdentifier",
                            src: "9757:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "9765:18:7",
                            type: "",
                            value: "0xffffffffffffffff",
                          },
                        ],
                        functionName: {
                          name: "gt",
                          nodeType: "YulIdentifier",
                          src: "9754:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9754:30:7",
                      },
                      nodeType: "YulIf",
                      src: "9751:117:7",
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "9882:98:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "9952:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "9963:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "9948:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "9948:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "9972:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr",
                          nodeType: "YulIdentifier",
                          src: "9900:47:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "9900:80:7",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "9882:6:7",
                        },
                        {
                          name: "value2",
                          nodeType: "YulIdentifier",
                          src: "9890:6:7",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "9365:9:7",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "9376:7:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "9388:6:7",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "9396:6:7",
                type: "",
              },
              {
                name: "value2",
                nodeType: "YulTypedName",
                src: "9404:6:7",
                type: "",
              },
            ],
            src: "9293:704:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10086:391:7",
              statements: [
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "10132:83:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            nodeType: "YulIdentifier",
                            src: "10134:77:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10134:79:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10134:79:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "10107:7:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "10116:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "10103:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10103:23:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10128:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "slt",
                      nodeType: "YulIdentifier",
                      src: "10099:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10099:32:7",
                  },
                  nodeType: "YulIf",
                  src: "10096:119:7",
                },
                {
                  nodeType: "YulBlock",
                  src: "10225:117:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10240:15:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10254:1:7",
                        type: "",
                        value: "0",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "10244:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "10269:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "10304:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "10315:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10300:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10300:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "10324:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "10279:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10279:53:7",
                      },
                      variableNames: [
                        {
                          name: "value0",
                          nodeType: "YulIdentifier",
                          src: "10269:6:7",
                        },
                      ],
                    },
                  ],
                },
                {
                  nodeType: "YulBlock",
                  src: "10352:118:7",
                  statements: [
                    {
                      nodeType: "YulVariableDeclaration",
                      src: "10367:16:7",
                      value: {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10381:2:7",
                        type: "",
                        value: "32",
                      },
                      variables: [
                        {
                          name: "offset",
                          nodeType: "YulTypedName",
                          src: "10371:6:7",
                          type: "",
                        },
                      ],
                    },
                    {
                      nodeType: "YulAssignment",
                      src: "10397:63:7",
                      value: {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "headStart",
                                nodeType: "YulIdentifier",
                                src: "10432:9:7",
                              },
                              {
                                name: "offset",
                                nodeType: "YulIdentifier",
                                src: "10443:6:7",
                              },
                            ],
                            functionName: {
                              name: "add",
                              nodeType: "YulIdentifier",
                              src: "10428:3:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "10428:22:7",
                          },
                          {
                            name: "dataEnd",
                            nodeType: "YulIdentifier",
                            src: "10452:7:7",
                          },
                        ],
                        functionName: {
                          name: "abi_decode_t_address",
                          nodeType: "YulIdentifier",
                          src: "10407:20:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10407:53:7",
                      },
                      variableNames: [
                        {
                          name: "value1",
                          nodeType: "YulIdentifier",
                          src: "10397:6:7",
                        },
                      ],
                    },
                  ],
                },
              ],
            },
            name: "abi_decode_tuple_t_addresst_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "10048:9:7",
                type: "",
              },
              {
                name: "dataEnd",
                nodeType: "YulTypedName",
                src: "10059:7:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "10071:6:7",
                type: "",
              },
              {
                name: "value1",
                nodeType: "YulTypedName",
                src: "10079:6:7",
                type: "",
              },
            ],
            src: "10003:474:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10511:152:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10528:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10531:77:7",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10521:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10521:88:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10521:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10625:1:7",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10628:4:7",
                        type: "",
                        value: "0x22",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "10618:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10618:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10618:15:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10649:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10652:4:7",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "10642:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10642:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "10642:15:7",
                },
              ],
            },
            name: "panic_error_0x22",
            nodeType: "YulFunctionDefinition",
            src: "10483:180:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "10720:269:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "10730:22:7",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "10744:4:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10750:1:7",
                        type: "",
                        value: "2",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "10740:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10740:12:7",
                  },
                  variableNames: [
                    {
                      name: "length",
                      nodeType: "YulIdentifier",
                      src: "10730:6:7",
                    },
                  ],
                },
                {
                  nodeType: "YulVariableDeclaration",
                  src: "10761:38:7",
                  value: {
                    arguments: [
                      {
                        name: "data",
                        nodeType: "YulIdentifier",
                        src: "10791:4:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "10797:1:7",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "and",
                      nodeType: "YulIdentifier",
                      src: "10787:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10787:12:7",
                  },
                  variables: [
                    {
                      name: "outOfPlaceEncoding",
                      nodeType: "YulTypedName",
                      src: "10765:18:7",
                      type: "",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "10838:51:7",
                    statements: [
                      {
                        nodeType: "YulAssignment",
                        src: "10852:27:7",
                        value: {
                          arguments: [
                            {
                              name: "length",
                              nodeType: "YulIdentifier",
                              src: "10866:6:7",
                            },
                            {
                              kind: "number",
                              nodeType: "YulLiteral",
                              src: "10874:4:7",
                              type: "",
                              value: "0x7f",
                            },
                          ],
                          functionName: {
                            name: "and",
                            nodeType: "YulIdentifier",
                            src: "10862:3:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10862:17:7",
                        },
                        variableNames: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "10852:6:7",
                          },
                        ],
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "10818:18:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "10811:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10811:26:7",
                  },
                  nodeType: "YulIf",
                  src: "10808:81:7",
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "10941:42:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x22",
                            nodeType: "YulIdentifier",
                            src: "10955:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "10955:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "10955:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "outOfPlaceEncoding",
                        nodeType: "YulIdentifier",
                        src: "10905:18:7",
                      },
                      {
                        arguments: [
                          {
                            name: "length",
                            nodeType: "YulIdentifier",
                            src: "10928:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "10936:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "lt",
                          nodeType: "YulIdentifier",
                          src: "10925:2:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "10925:14:7",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "10902:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "10902:38:7",
                  },
                  nodeType: "YulIf",
                  src: "10899:84:7",
                },
              ],
            },
            name: "extract_byte_array_length",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "data",
                nodeType: "YulTypedName",
                src: "10704:4:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "length",
                nodeType: "YulTypedName",
                src: "10713:6:7",
                type: "",
              },
            ],
            src: "10669:320:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11023:152:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11040:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11043:77:7",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11033:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11033:88:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11033:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11137:1:7",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11140:4:7",
                        type: "",
                        value: "0x11",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11130:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11130:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11130:15:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11161:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11164:4:7",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "11154:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11154:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11154:15:7",
                },
              ],
            },
            name: "panic_error_0x11",
            nodeType: "YulFunctionDefinition",
            src: "10995:180:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11225:261:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "11235:25:7",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "11258:1:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "11240:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11240:20:7",
                  },
                  variableNames: [
                    {
                      name: "x",
                      nodeType: "YulIdentifier",
                      src: "11235:1:7",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "11269:25:7",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "11292:1:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "11274:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11274:20:7",
                  },
                  variableNames: [
                    {
                      name: "y",
                      nodeType: "YulIdentifier",
                      src: "11269:1:7",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "11432:22:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "11434:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "11434:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "11434:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "11353:1:7",
                      },
                      {
                        arguments: [
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11360:66:7",
                            type: "",
                            value:
                              "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                          },
                          {
                            name: "y",
                            nodeType: "YulIdentifier",
                            src: "11428:1:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "11356:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11356:74:7",
                      },
                    ],
                    functionName: {
                      name: "gt",
                      nodeType: "YulIdentifier",
                      src: "11350:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11350:81:7",
                  },
                  nodeType: "YulIf",
                  src: "11347:107:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "11464:16:7",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "11475:1:7",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "11478:1:7",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "11471:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11471:9:7",
                  },
                  variableNames: [
                    {
                      name: "sum",
                      nodeType: "YulIdentifier",
                      src: "11464:3:7",
                    },
                  ],
                },
              ],
            },
            name: "checked_add_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "11212:1:7",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "11215:1:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "sum",
                nodeType: "YulTypedName",
                src: "11221:3:7",
                type: "",
              },
            ],
            src: "11181:305:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11598:70:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "11620:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "11628:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "11616:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "11616:14:7",
                      },
                      {
                        hexValue:
                          "436c61696d20706861736520686173206e6f7420656e6465642e",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "11632:28:7",
                        type: "",
                        value: "Claim phase has not ended.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "11609:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11609:52:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11609:52:7",
                },
              ],
            },
            name: "store_literal_in_memory_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "11590:6:7",
                type: "",
              },
            ],
            src: "11492:176:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "11820:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "11830:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "11896:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "11901:2:7",
                        type: "",
                        value: "26",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "11837:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11837:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "11830:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "12002:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d",
                      nodeType: "YulIdentifier",
                      src: "11913:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "11913:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "11913:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "12015:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "12026:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12031:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "12022:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12022:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "12015:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "11808:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "11816:3:7",
                type: "",
              },
            ],
            src: "11674:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12217:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "12227:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "12239:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12250:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "12235:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12235:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12227:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12274:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12285:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12270:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12270:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "12293:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "12299:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "12289:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12289:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12263:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12263:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12263:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "12319:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "12453:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "12327:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12327:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "12319:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "12197:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "12212:4:7",
                type: "",
              },
            ],
            src: "12046:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12577:132:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "12599:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12607:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12595:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12595:14:7",
                      },
                      {
                        hexValue:
                          "42656e65766f6c656e74204164647265737320546f6b656e7320686176652061",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "12611:34:7",
                        type: "",
                        value: "Benevolent Address Tokens have a",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12588:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12588:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12588:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "12667:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "12675:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "12663:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "12663:15:7",
                      },
                      {
                        hexValue: "6c7265616479206265656e206d696e7465642e",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "12680:21:7",
                        type: "",
                        value: "lready been minted.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "12656:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12656:46:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12656:46:7",
                },
              ],
            },
            name: "store_literal_in_memory_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "12569:6:7",
                type: "",
              },
            ],
            src: "12471:238:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "12861:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "12871:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "12937:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "12942:2:7",
                        type: "",
                        value: "51",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "12878:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12878:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "12871:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "13043:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca",
                      nodeType: "YulIdentifier",
                      src: "12954:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "12954:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "12954:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13056:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "13067:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13072:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13063:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13063:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "13056:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "12849:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "12857:3:7",
                type: "",
              },
            ],
            src: "12715:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13258:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "13268:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "13280:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13291:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "13276:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13276:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13268:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13315:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13326:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13311:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13311:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "13334:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "13340:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "13330:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13330:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13304:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13304:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13304:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "13360:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "13494:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "13368:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13368:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "13360:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "13238:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "13253:4:7",
                type: "",
              },
            ],
            src: "13087:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13618:118:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "13640:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13648:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13636:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13636:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13652:34:7",
                        type: "",
                        value: "ERC20: decreased allowance below",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13629:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13629:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13629:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "13708:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "13716:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "13704:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "13704:15:7",
                      },
                      {
                        hexValue: "207a65726f",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "13721:7:7",
                        type: "",
                        value: " zero",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "13697:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13697:32:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13697:32:7",
                },
              ],
            },
            name: "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "13610:6:7",
                type: "",
              },
            ],
            src: "13512:224:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "13888:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "13898:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "13964:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "13969:2:7",
                        type: "",
                        value: "37",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "13905:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13905:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "13898:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "14070:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                      nodeType: "YulIdentifier",
                      src: "13981:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "13981:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "13981:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "14083:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "14094:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14099:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "14090:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14090:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "14083:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "13876:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "13884:3:7",
                type: "",
              },
            ],
            src: "13742:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14285:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "14295:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "14307:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14318:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "14303:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14303:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14295:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14342:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14353:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14338:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14338:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "14361:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "14367:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "14357:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14357:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14331:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14331:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14331:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "14387:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "14521:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "14395:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14395:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "14387:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "14265:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "14280:4:7",
                type: "",
              },
            ],
            src: "14114:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14645:66:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "14667:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "14675:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "14663:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "14663:14:7",
                      },
                      {
                        hexValue:
                          "436c61696d2070686173652068617320656e6465642e",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "14679:24:7",
                        type: "",
                        value: "Claim phase has ended.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "14656:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14656:48:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14656:48:7",
                },
              ],
            },
            name: "store_literal_in_memory_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "14637:6:7",
                type: "",
              },
            ],
            src: "14539:172:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "14863:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "14873:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "14939:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "14944:2:7",
                        type: "",
                        value: "22",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "14880:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14880:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "14873:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "15045:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03",
                      nodeType: "YulIdentifier",
                      src: "14956:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "14956:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "14956:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15058:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "15069:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15074:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15065:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15065:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "15058:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "14851:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "14859:3:7",
                type: "",
              },
            ],
            src: "14717:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15260:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "15270:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "15282:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15293:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "15278:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15278:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15270:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15317:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15328:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15313:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15313:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "15336:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "15342:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "15332:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15332:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15306:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15306:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15306:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "15362:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "15496:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "15370:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15370:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "15362:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "15240:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "15255:4:7",
                type: "",
              },
            ],
            src: "15089:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15620:72:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "15642:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "15650:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "15638:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "15638:14:7",
                      },
                      {
                        hexValue:
                          "416464726573732068617320616c726561647920636c61696d65642e",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "15654:30:7",
                        type: "",
                        value: "Address has already claimed.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "15631:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15631:54:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15631:54:7",
                },
              ],
            },
            name: "store_literal_in_memory_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "15612:6:7",
                type: "",
              },
            ],
            src: "15514:178:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "15844:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "15854:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "15920:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "15925:2:7",
                        type: "",
                        value: "28",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "15861:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15861:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "15854:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "16026:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9",
                      nodeType: "YulIdentifier",
                      src: "15937:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "15937:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "15937:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "16039:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "16050:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16055:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "16046:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16046:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "16039:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "15832:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "15840:3:7",
                type: "",
              },
            ],
            src: "15698:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16241:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "16251:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "16263:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16274:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "16259:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16259:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16251:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16298:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16309:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16294:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16294:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "16317:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "16323:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "16313:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16313:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16287:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16287:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16287:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "16343:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "16477:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "16351:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16351:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "16343:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "16221:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "16236:4:7",
                type: "",
              },
            ],
            src: "16070:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16601:73:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "16623:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "16631:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "16619:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "16619:14:7",
                      },
                      {
                        hexValue:
                          "4845582041646472657373206973206e6f7420636c61696d61626c652e",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "16635:31:7",
                        type: "",
                        value: "HEX Address is not claimable.",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "16612:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16612:55:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16612:55:7",
                },
              ],
            },
            name: "store_literal_in_memory_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "16593:6:7",
                type: "",
              },
            ],
            src: "16495:179:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "16826:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "16836:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "16902:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "16907:2:7",
                        type: "",
                        value: "29",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "16843:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16843:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "16836:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "17008:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52",
                      nodeType: "YulIdentifier",
                      src: "16919:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "16919:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "16919:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "17021:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "17032:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17037:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17028:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17028:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "17021:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "16814:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "16822:3:7",
                type: "",
              },
            ],
            src: "16680:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17223:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17233:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "17245:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "17256:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "17241:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17241:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17233:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17280:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "17291:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "17276:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17276:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "17299:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "17305:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "17295:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17295:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17269:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17269:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17269:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "17325:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "17459:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "17333:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17333:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "17325:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "17203:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "17218:4:7",
                type: "",
              },
            ],
            src: "17052:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17533:32:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17543:16:7",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "17554:5:7",
                  },
                  variableNames: [
                    {
                      name: "cleaned",
                      nodeType: "YulIdentifier",
                      src: "17543:7:7",
                    },
                  ],
                },
              ],
            },
            name: "cleanup_t_rational_1000_by_1",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "17515:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "cleaned",
                nodeType: "YulTypedName",
                src: "17525:7:7",
                type: "",
              },
            ],
            src: "17477:88:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17603:28:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17613:12:7",
                  value: {
                    name: "value",
                    nodeType: "YulIdentifier",
                    src: "17620:5:7",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "17613:3:7",
                    },
                  ],
                },
              ],
            },
            name: "identity",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "17589:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "17599:3:7",
                type: "",
              },
            ],
            src: "17571:60:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17708:93:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "17718:77:7",
                  value: {
                    arguments: [
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "17787:5:7",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_rational_1000_by_1",
                              nodeType: "YulIdentifier",
                              src: "17758:28:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "17758:35:7",
                          },
                        ],
                        functionName: {
                          name: "identity",
                          nodeType: "YulIdentifier",
                          src: "17749:8:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17749:45:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "17731:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17731:64:7",
                  },
                  variableNames: [
                    {
                      name: "converted",
                      nodeType: "YulIdentifier",
                      src: "17718:9:7",
                    },
                  ],
                },
              ],
            },
            name: "convert_t_rational_1000_by_1_to_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "17688:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "converted",
                nodeType: "YulTypedName",
                src: "17698:9:7",
                type: "",
              },
            ],
            src: "17637:164:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "17883:77:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "17900:3:7",
                      },
                      {
                        arguments: [
                          {
                            name: "value",
                            nodeType: "YulIdentifier",
                            src: "17947:5:7",
                          },
                        ],
                        functionName: {
                          name: "convert_t_rational_1000_by_1_to_t_uint256",
                          nodeType: "YulIdentifier",
                          src: "17905:41:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "17905:48:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "17893:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "17893:61:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "17893:61:7",
                },
              ],
            },
            name: "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "17871:5:7",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "17878:3:7",
                type: "",
              },
            ],
            src: "17807:153:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18075:135:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18085:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "18097:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "18108:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18093:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18093:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "18085:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "18176:6:7",
                      },
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "18189:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18200:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "18185:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18185:17:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack",
                      nodeType: "YulIdentifier",
                      src: "18121:54:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18121:82:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18121:82:7",
                },
              ],
            },
            name: "abi_encode_tuple_t_rational_1000_by_1__to_t_uint256__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "18047:9:7",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "18059:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "18070:4:7",
                type: "",
              },
            ],
            src: "17966:244:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18322:117:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "18344:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18352:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "18340:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18340:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "18356:34:7",
                        type: "",
                        value: "ERC20: approve from the zero add",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "18333:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18333:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18333:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "18412:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "18420:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "18408:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "18408:15:7",
                      },
                      {
                        hexValue: "72657373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "18425:6:7",
                        type: "",
                        value: "ress",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "18401:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18401:31:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18401:31:7",
                },
              ],
            },
            name: "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "18314:6:7",
                type: "",
              },
            ],
            src: "18216:223:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18591:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18601:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "18667:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "18672:2:7",
                        type: "",
                        value: "36",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "18608:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18608:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "18601:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "18773:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                      nodeType: "YulIdentifier",
                      src: "18684:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18684:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "18684:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "18786:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "18797:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "18802:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "18793:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "18793:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "18786:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "18579:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "18587:3:7",
                type: "",
              },
            ],
            src: "18445:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "18988:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "18998:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "19010:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19021:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19006:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19006:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "18998:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "19045:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19056:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "19041:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19041:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "19064:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "19070:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "19060:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19060:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19034:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19034:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19034:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19090:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "19224:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "19098:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19098:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "19090:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "18968:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "18983:4:7",
                type: "",
              },
            ],
            src: "18817:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19348:115:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "19370:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19378:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "19366:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19366:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "19382:34:7",
                        type: "",
                        value: "ERC20: approve to the zero addre",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19359:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19359:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19359:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "19438:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "19446:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "19434:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "19434:15:7",
                      },
                      {
                        hexValue: "7373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "19451:4:7",
                        type: "",
                        value: "ss",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "19427:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19427:29:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19427:29:7",
                },
              ],
            },
            name: "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "19340:6:7",
                type: "",
              },
            ],
            src: "19242:221:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "19615:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "19625:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19691:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19696:2:7",
                        type: "",
                        value: "34",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "19632:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19632:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "19625:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19797:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                      nodeType: "YulIdentifier",
                      src: "19708:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19708:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "19708:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "19810:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "19821:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "19826:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "19817:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "19817:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "19810:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "19603:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "19611:3:7",
                type: "",
              },
            ],
            src: "19469:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20012:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20022:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "20034:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "20045:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "20030:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20030:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "20022:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "20069:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "20080:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "20065:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "20065:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "20088:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "20094:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "20084:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "20084:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "20058:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20058:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "20058:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "20114:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "20248:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "20122:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20122:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "20114:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "19992:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "20007:4:7",
                type: "",
              },
            ],
            src: "19841:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20308:52:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20318:35:7",
                  value: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "20343:2:7",
                        type: "",
                        value: "96",
                      },
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20347:5:7",
                      },
                    ],
                    functionName: {
                      name: "shl",
                      nodeType: "YulIdentifier",
                      src: "20339:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20339:14:7",
                  },
                  variableNames: [
                    {
                      name: "newValue",
                      nodeType: "YulIdentifier",
                      src: "20318:8:7",
                    },
                  ],
                },
              ],
            },
            name: "shift_left_96",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20289:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "newValue",
                nodeType: "YulTypedName",
                src: "20299:8:7",
                type: "",
              },
            ],
            src: "20266:94:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20413:47:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20423:31:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20448:5:7",
                      },
                    ],
                    functionName: {
                      name: "shift_left_96",
                      nodeType: "YulIdentifier",
                      src: "20434:13:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20434:20:7",
                  },
                  variableNames: [
                    {
                      name: "aligned",
                      nodeType: "YulIdentifier",
                      src: "20423:7:7",
                    },
                  ],
                },
              ],
            },
            name: "leftAlign_t_uint160",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20395:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "aligned",
                nodeType: "YulTypedName",
                src: "20405:7:7",
                type: "",
              },
            ],
            src: "20366:94:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20513:53:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "20523:37:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "20554:5:7",
                      },
                    ],
                    functionName: {
                      name: "leftAlign_t_uint160",
                      nodeType: "YulIdentifier",
                      src: "20534:19:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20534:26:7",
                  },
                  variableNames: [
                    {
                      name: "aligned",
                      nodeType: "YulIdentifier",
                      src: "20523:7:7",
                    },
                  ],
                },
              ],
            },
            name: "leftAlign_t_address",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20495:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "aligned",
                nodeType: "YulTypedName",
                src: "20505:7:7",
                type: "",
              },
            ],
            src: "20466:100:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20655:74:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "20672:3:7",
                      },
                      {
                        arguments: [
                          {
                            arguments: [
                              {
                                name: "value",
                                nodeType: "YulIdentifier",
                                src: "20715:5:7",
                              },
                            ],
                            functionName: {
                              name: "cleanup_t_address",
                              nodeType: "YulIdentifier",
                              src: "20697:17:7",
                            },
                            nodeType: "YulFunctionCall",
                            src: "20697:24:7",
                          },
                        ],
                        functionName: {
                          name: "leftAlign_t_address",
                          nodeType: "YulIdentifier",
                          src: "20677:19:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "20677:45:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "20665:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20665:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "20665:58:7",
                },
              ],
            },
            name: "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "20643:5:7",
                type: "",
              },
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "20650:3:7",
                type: "",
              },
            ],
            src: "20572:157:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "20851:140:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        name: "value0",
                        nodeType: "YulIdentifier",
                        src: "20924:6:7",
                      },
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "20933:3:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
                      nodeType: "YulIdentifier",
                      src: "20862:61:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20862:75:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "20862:75:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "20946:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "20957:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "20962:2:7",
                        type: "",
                        value: "20",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "20953:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "20953:12:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "20946:3:7",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "20975:10:7",
                  value: {
                    name: "pos",
                    nodeType: "YulIdentifier",
                    src: "20982:3:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "20975:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "20830:3:7",
                type: "",
              },
              {
                name: "value0",
                nodeType: "YulTypedName",
                src: "20836:6:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "20847:3:7",
                type: "",
              },
            ],
            src: "20735:256:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21103:73:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "21125:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21133:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21121:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21121:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "21137:31:7",
                        type: "",
                        value: "ERC20: insufficient allowance",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21114:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21114:55:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21114:55:7",
                },
              ],
            },
            name: "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "21095:6:7",
                type: "",
              },
            ],
            src: "20997:179:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21328:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "21338:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "21404:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21409:2:7",
                        type: "",
                        value: "29",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "21345:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21345:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "21338:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "21510:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                      nodeType: "YulIdentifier",
                      src: "21421:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21421:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21421:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "21523:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "21534:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21539:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "21530:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21530:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "21523:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "21316:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "21324:3:7",
                type: "",
              },
            ],
            src: "21182:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "21725:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "21735:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "21747:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "21758:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "21743:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21743:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "21735:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "21782:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "21793:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "21778:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21778:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "21801:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "21807:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "21797:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "21797:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "21771:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21771:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "21771:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "21827:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "21961:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "21835:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "21835:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "21827:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "21705:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "21720:4:7",
                type: "",
              },
            ],
            src: "21554:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22085:118:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22107:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22115:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22103:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22103:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22119:34:7",
                        type: "",
                        value: "ERC20: transfer from the zero ad",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22096:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22096:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22096:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "22175:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22183:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22171:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22171:15:7",
                      },
                      {
                        hexValue: "6472657373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "22188:7:7",
                        type: "",
                        value: "dress",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22164:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22164:32:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22164:32:7",
                },
              ],
            },
            name: "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "22077:6:7",
                type: "",
              },
            ],
            src: "21979:224:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22355:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "22365:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "22431:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "22436:2:7",
                        type: "",
                        value: "37",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "22372:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22372:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "22365:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "22537:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                      nodeType: "YulIdentifier",
                      src: "22448:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22448:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22448:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "22550:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "22561:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "22566:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "22557:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22557:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "22550:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "22343:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "22351:3:7",
                type: "",
              },
            ],
            src: "22209:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "22752:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "22762:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "22774:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "22785:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "22770:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22770:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "22762:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "22809:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "22820:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "22805:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22805:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "22828:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "22834:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "22824:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "22824:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "22798:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22798:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "22798:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "22854:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "22988:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "22862:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "22862:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "22854:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "22732:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "22747:4:7",
                type: "",
              },
            ],
            src: "22581:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "23112:116:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "23134:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "23142:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "23130:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23130:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "23146:34:7",
                        type: "",
                        value: "ERC20: transfer to the zero addr",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "23123:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23123:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "23123:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "23202:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "23210:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "23198:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23198:15:7",
                      },
                      {
                        hexValue: "657373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "23215:5:7",
                        type: "",
                        value: "ess",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "23191:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23191:30:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "23191:30:7",
                },
              ],
            },
            name: "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "23104:6:7",
                type: "",
              },
            ],
            src: "23006:222:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "23380:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "23390:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "23456:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "23461:2:7",
                        type: "",
                        value: "35",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "23397:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23397:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "23390:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "23562:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                      nodeType: "YulIdentifier",
                      src: "23473:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23473:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "23473:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "23575:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "23586:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "23591:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "23582:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23582:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "23575:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "23368:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "23376:3:7",
                type: "",
              },
            ],
            src: "23234:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "23777:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "23787:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "23799:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "23810:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "23795:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23795:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "23787:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "23834:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "23845:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "23830:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23830:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "23853:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "23859:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "23849:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "23849:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "23823:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23823:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "23823:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "23879:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "24013:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "23887:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "23887:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "23879:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "23757:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "23772:4:7",
                type: "",
              },
            ],
            src: "23606:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "24137:119:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "24159:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "24167:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "24155:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "24155:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "24171:34:7",
                        type: "",
                        value: "ERC20: transfer amount exceeds b",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "24148:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24148:58:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "24148:58:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "24227:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "24235:2:7",
                            type: "",
                            value: "32",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "24223:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "24223:15:7",
                      },
                      {
                        hexValue: "616c616e6365",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "24240:8:7",
                        type: "",
                        value: "alance",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "24216:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24216:33:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "24216:33:7",
                },
              ],
            },
            name: "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "24129:6:7",
                type: "",
              },
            ],
            src: "24031:225:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "24408:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "24418:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "24484:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "24489:2:7",
                        type: "",
                        value: "38",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "24425:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24425:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "24418:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "24590:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                      nodeType: "YulIdentifier",
                      src: "24501:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24501:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "24501:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "24603:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "24614:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "24619:2:7",
                        type: "",
                        value: "64",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "24610:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24610:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "24603:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "24396:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "24404:3:7",
                type: "",
              },
            ],
            src: "24262:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "24805:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "24815:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "24827:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "24838:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "24823:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24823:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "24815:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "24862:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "24873:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "24858:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "24858:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "24881:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "24887:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "24877:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "24877:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "24851:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24851:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "24851:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "24907:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "25041:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "24915:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "24915:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "24907:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "24785:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "24800:4:7",
                type: "",
              },
            ],
            src: "24634:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "25165:75:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "memPtr",
                            nodeType: "YulIdentifier",
                            src: "25187:6:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "25195:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "25183:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "25183:14:7",
                      },
                      {
                        hexValue:
                          "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        kind: "string",
                        nodeType: "YulLiteral",
                        src: "25199:33:7",
                        type: "",
                        value: "ERC20: mint to the zero address",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "25176:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25176:57:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "25176:57:7",
                },
              ],
            },
            name: "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "memPtr",
                nodeType: "YulTypedName",
                src: "25157:6:7",
                type: "",
              },
            ],
            src: "25059:181:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "25392:220:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "25402:74:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "25468:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "25473:2:7",
                        type: "",
                        value: "31",
                      },
                    ],
                    functionName: {
                      name: "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "25409:58:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25409:67:7",
                  },
                  variableNames: [
                    {
                      name: "pos",
                      nodeType: "YulIdentifier",
                      src: "25402:3:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "25574:3:7",
                      },
                    ],
                    functionName: {
                      name: "store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                      nodeType: "YulIdentifier",
                      src: "25485:88:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25485:93:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "25485:93:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "25587:19:7",
                  value: {
                    arguments: [
                      {
                        name: "pos",
                        nodeType: "YulIdentifier",
                        src: "25598:3:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "25603:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "25594:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25594:12:7",
                  },
                  variableNames: [
                    {
                      name: "end",
                      nodeType: "YulIdentifier",
                      src: "25587:3:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "pos",
                nodeType: "YulTypedName",
                src: "25380:3:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "end",
                nodeType: "YulTypedName",
                src: "25388:3:7",
                type: "",
              },
            ],
            src: "25246:366:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "25789:248:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "25799:26:7",
                  value: {
                    arguments: [
                      {
                        name: "headStart",
                        nodeType: "YulIdentifier",
                        src: "25811:9:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "25822:2:7",
                        type: "",
                        value: "32",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "25807:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25807:18:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "25799:4:7",
                    },
                  ],
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "25846:9:7",
                          },
                          {
                            kind: "number",
                            nodeType: "YulLiteral",
                            src: "25857:1:7",
                            type: "",
                            value: "0",
                          },
                        ],
                        functionName: {
                          name: "add",
                          nodeType: "YulIdentifier",
                          src: "25842:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "25842:17:7",
                      },
                      {
                        arguments: [
                          {
                            name: "tail",
                            nodeType: "YulIdentifier",
                            src: "25865:4:7",
                          },
                          {
                            name: "headStart",
                            nodeType: "YulIdentifier",
                            src: "25871:9:7",
                          },
                        ],
                        functionName: {
                          name: "sub",
                          nodeType: "YulIdentifier",
                          src: "25861:3:7",
                        },
                        nodeType: "YulFunctionCall",
                        src: "25861:20:7",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "25835:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25835:47:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "25835:47:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "25891:139:7",
                  value: {
                    arguments: [
                      {
                        name: "tail",
                        nodeType: "YulIdentifier",
                        src: "26025:4:7",
                      },
                    ],
                    functionName: {
                      name: "abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack",
                      nodeType: "YulIdentifier",
                      src: "25899:124:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "25899:131:7",
                  },
                  variableNames: [
                    {
                      name: "tail",
                      nodeType: "YulIdentifier",
                      src: "25891:4:7",
                    },
                  ],
                },
              ],
            },
            name: "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "headStart",
                nodeType: "YulTypedName",
                src: "25769:9:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "tail",
                nodeType: "YulTypedName",
                src: "25784:4:7",
                type: "",
              },
            ],
            src: "25618:419:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "26088:146:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "26098:25:7",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "26121:1:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "26103:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26103:20:7",
                  },
                  variableNames: [
                    {
                      name: "x",
                      nodeType: "YulIdentifier",
                      src: "26098:1:7",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "26132:25:7",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "26155:1:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "26137:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26137:20:7",
                  },
                  variableNames: [
                    {
                      name: "y",
                      nodeType: "YulIdentifier",
                      src: "26132:1:7",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "26179:22:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "26181:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26181:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "26181:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "26173:1:7",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "26176:1:7",
                      },
                    ],
                    functionName: {
                      name: "lt",
                      nodeType: "YulIdentifier",
                      src: "26170:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26170:8:7",
                  },
                  nodeType: "YulIf",
                  src: "26167:34:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "26211:17:7",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "26223:1:7",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "26226:1:7",
                      },
                    ],
                    functionName: {
                      name: "sub",
                      nodeType: "YulIdentifier",
                      src: "26219:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26219:9:7",
                  },
                  variableNames: [
                    {
                      name: "diff",
                      nodeType: "YulIdentifier",
                      src: "26211:4:7",
                    },
                  ],
                },
              ],
            },
            name: "checked_sub_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "26074:1:7",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "26077:1:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "diff",
                nodeType: "YulTypedName",
                src: "26083:4:7",
                type: "",
              },
            ],
            src: "26043:191:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "26268:152:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26285:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26288:77:7",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "26278:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26278:88:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "26278:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26382:1:7",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26385:4:7",
                        type: "",
                        value: "0x12",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "26375:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26375:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "26375:15:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26406:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26409:4:7",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "26399:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26399:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "26399:15:7",
                },
              ],
            },
            name: "panic_error_0x12",
            nodeType: "YulFunctionDefinition",
            src: "26240:180:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "26468:143:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "26478:25:7",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "26501:1:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "26483:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26483:20:7",
                  },
                  variableNames: [
                    {
                      name: "x",
                      nodeType: "YulIdentifier",
                      src: "26478:1:7",
                    },
                  ],
                },
                {
                  nodeType: "YulAssignment",
                  src: "26512:25:7",
                  value: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "26535:1:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "26517:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26517:20:7",
                  },
                  variableNames: [
                    {
                      name: "y",
                      nodeType: "YulIdentifier",
                      src: "26512:1:7",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "26559:22:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x12",
                            nodeType: "YulIdentifier",
                            src: "26561:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26561:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "26561:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "26556:1:7",
                      },
                    ],
                    functionName: {
                      name: "iszero",
                      nodeType: "YulIdentifier",
                      src: "26549:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26549:9:7",
                  },
                  nodeType: "YulIf",
                  src: "26546:35:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "26591:14:7",
                  value: {
                    arguments: [
                      {
                        name: "x",
                        nodeType: "YulIdentifier",
                        src: "26600:1:7",
                      },
                      {
                        name: "y",
                        nodeType: "YulIdentifier",
                        src: "26603:1:7",
                      },
                    ],
                    functionName: {
                      name: "div",
                      nodeType: "YulIdentifier",
                      src: "26596:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26596:9:7",
                  },
                  variableNames: [
                    {
                      name: "r",
                      nodeType: "YulIdentifier",
                      src: "26591:1:7",
                    },
                  ],
                },
              ],
            },
            name: "checked_div_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "x",
                nodeType: "YulTypedName",
                src: "26457:1:7",
                type: "",
              },
              {
                name: "y",
                nodeType: "YulTypedName",
                src: "26460:1:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "r",
                nodeType: "YulTypedName",
                src: "26466:1:7",
                type: "",
              },
            ],
            src: "26426:185:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "26645:152:7",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26662:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26665:77:7",
                        type: "",
                        value:
                          "35408467139433450592217433187231851964531694900788300625387963629091585785856",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "26655:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26655:88:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "26655:88:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26759:1:7",
                        type: "",
                        value: "4",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26762:4:7",
                        type: "",
                        value: "0x32",
                      },
                    ],
                    functionName: {
                      name: "mstore",
                      nodeType: "YulIdentifier",
                      src: "26752:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26752:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "26752:15:7",
                },
                {
                  expression: {
                    arguments: [
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26783:1:7",
                        type: "",
                        value: "0",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26786:4:7",
                        type: "",
                        value: "0x24",
                      },
                    ],
                    functionName: {
                      name: "revert",
                      nodeType: "YulIdentifier",
                      src: "26776:6:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26776:15:7",
                  },
                  nodeType: "YulExpressionStatement",
                  src: "26776:15:7",
                },
              ],
            },
            name: "panic_error_0x32",
            nodeType: "YulFunctionDefinition",
            src: "26617:180:7",
          },
          {
            body: {
              nodeType: "YulBlock",
              src: "26846:190:7",
              statements: [
                {
                  nodeType: "YulAssignment",
                  src: "26856:33:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "26883:5:7",
                      },
                    ],
                    functionName: {
                      name: "cleanup_t_uint256",
                      nodeType: "YulIdentifier",
                      src: "26865:17:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26865:24:7",
                  },
                  variableNames: [
                    {
                      name: "value",
                      nodeType: "YulIdentifier",
                      src: "26856:5:7",
                    },
                  ],
                },
                {
                  body: {
                    nodeType: "YulBlock",
                    src: "26979:22:7",
                    statements: [
                      {
                        expression: {
                          arguments: [],
                          functionName: {
                            name: "panic_error_0x11",
                            nodeType: "YulIdentifier",
                            src: "26981:16:7",
                          },
                          nodeType: "YulFunctionCall",
                          src: "26981:18:7",
                        },
                        nodeType: "YulExpressionStatement",
                        src: "26981:18:7",
                      },
                    ],
                  },
                  condition: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "26904:5:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "26911:66:7",
                        type: "",
                        value:
                          "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
                      },
                    ],
                    functionName: {
                      name: "eq",
                      nodeType: "YulIdentifier",
                      src: "26901:2:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "26901:77:7",
                  },
                  nodeType: "YulIf",
                  src: "26898:103:7",
                },
                {
                  nodeType: "YulAssignment",
                  src: "27010:20:7",
                  value: {
                    arguments: [
                      {
                        name: "value",
                        nodeType: "YulIdentifier",
                        src: "27021:5:7",
                      },
                      {
                        kind: "number",
                        nodeType: "YulLiteral",
                        src: "27028:1:7",
                        type: "",
                        value: "1",
                      },
                    ],
                    functionName: {
                      name: "add",
                      nodeType: "YulIdentifier",
                      src: "27017:3:7",
                    },
                    nodeType: "YulFunctionCall",
                    src: "27017:13:7",
                  },
                  variableNames: [
                    {
                      name: "ret",
                      nodeType: "YulIdentifier",
                      src: "27010:3:7",
                    },
                  ],
                },
              ],
            },
            name: "increment_t_uint256",
            nodeType: "YulFunctionDefinition",
            parameters: [
              {
                name: "value",
                nodeType: "YulTypedName",
                src: "26832:5:7",
                type: "",
              },
            ],
            returnVariables: [
              {
                name: "ret",
                nodeType: "YulTypedName",
                src: "26842:3:7",
                type: "",
              },
            ],
            src: "26803:233:7",
          },
        ],
      },
      contents:
        '{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    // bytes32[]\n    function abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_bytes32_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_bytes32(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_bytes32_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_bytes32_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    // bytes32[]\n    function abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x20)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_array$_t_bytes32_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_array$_t_bytes32_$dyn_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d(memPtr) {\n\n        mstore(add(memPtr, 0), "Claim phase has not ended.")\n\n    }\n\n    function abi_encode_t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca(memPtr) {\n\n        mstore(add(memPtr, 0), "Benevolent Address Tokens have a")\n\n        mstore(add(memPtr, 32), "lready been minted.")\n\n    }\n\n    function abi_encode_t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 51)\n        store_literal_in_memory_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: decreased allowance below")\n\n        mstore(add(memPtr, 32), " zero")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03(memPtr) {\n\n        mstore(add(memPtr, 0), "Claim phase has ended.")\n\n    }\n\n    function abi_encode_t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9(memPtr) {\n\n        mstore(add(memPtr, 0), "Address has already claimed.")\n\n    }\n\n    function abi_encode_t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52(memPtr) {\n\n        mstore(add(memPtr, 0), "HEX Address is not claimable.")\n\n    }\n\n    function abi_encode_t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_1000_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1000_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1000_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1000_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1000_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1000_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: approve from the zero add")\n\n        mstore(add(memPtr, 32), "ress")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: approve to the zero addre")\n\n        mstore(add(memPtr, 32), "ss")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address__to_t_address__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: insufficient allowance")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: transfer from the zero ad")\n\n        mstore(add(memPtr, 32), "dress")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: transfer to the zero addr")\n\n        mstore(add(memPtr, 32), "ess")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: transfer amount exceeds b")\n\n        mstore(add(memPtr, 32), "alance")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), "ERC20: mint to the zero address")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n',
      id: 7,
      language: "Yul",
      name: "#utility.yul",
    },
  ],
  sourceMap:
    "219:5199:6:-:0;;;285:91;;;;;;;;;;1978:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2052:5;2044;:13;;;;;;;;;;;;:::i;:::-;;2077:7;2067;:17;;;;;;;;;;;;:::i;:::-;;1978:113;;354:15:6::1;340:11;:29;;;;219:5199:::0;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:7:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;219:5199:6:-;;;;;;;",
  deployedSourceMap:
    "219:5199:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3081:191:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3244:106:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5192:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1690:135:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5873:234:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2539:119:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3751:654;;;:::i;:::-;;3408:125:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1256:42:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1984:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2367:102:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6594:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3729:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4756:660:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3976:149:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2258:123:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2156:98:2;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;4532:13;4548:12;:10;:12::i;:::-;4532:28;;4570:32;4579:5;4586:7;4595:6;4570:8;:32::i;:::-;4619:4;4612:11;;;4433:197;;;;:::o;3081:191:6:-;3200:4;3227:38;3250:7;3259:5;3227:22;:38::i;:::-;3220:45;;3081:191;;;;:::o;3244:106:2:-;3305:7;3331:12;;3324:19;;3244:106;:::o;5192:286::-;5319:4;5335:15;5353:12;:10;:12::i;:::-;5335:30;;5375:38;5391:4;5397:7;5406:6;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;5467:4;5460:11;;;5192:286;;;;;:::o;1690:135:6:-;1788:5;1816:2;1809:9;;1690:135;:::o;5873:234:2:-;5961:4;5977:13;5993:12;:10;:12::i;:::-;5977:28;;6015:64;6024:5;6031:7;6068:10;6040:25;6050:5;6057:7;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;:::-;6096:4;6089:11;;;5873:234;;;;:::o;2539:119:6:-;2608:7;2638:13;:11;:13::i;:::-;2631:20;;2539:119;:::o;3751:654::-;819:3;3872:13;:11;:13::i;:::-;:32;3864:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4024:15;;;;;;;;;;;4023:16;4015:80;;;;;;;;;;;;:::i;:::-;;;;;;;;;4193:4;4175:15;;:22;;;;;;;;;;;;;;;;;;4298:19;4320:4;4298:26;;4363:35;685:42;4386:11;4363:5;:35::i;:::-;3796:609;3751:654::o;3408:125:2:-;3482:7;3508:9;:18;3518:7;3508:18;;;;;;;;;;;;;;;;3501:25;;3408:125;;;:::o;1256:42:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;1984:115::-;2051:7;2081:11;;2074:18;;1984:115;:::o;2367:102:2:-;2423:13;2455:7;2448:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2367:102;:::o;6594:427::-;6687:4;6703:13;6719:12;:10;:12::i;:::-;6703:28;;6741:24;6768:25;6778:5;6785:7;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;:::-;7010:4;7003:11;;;;6594:427;;;;:::o;3729:189::-;3808:4;3824:13;3840:12;:10;:12::i;:::-;3824:28;;3862;3872:5;3879:2;3883:6;3862:9;:28::i;:::-;3907:4;3900:11;;;3729:189;;;;:::o;4756:660:6:-;819:3;4848:13;:11;:13::i;:::-;:33;;4840:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4927:10;:14;4938:2;4927:14;;;;;;;;;;;;;;;;;;;;;;;;;4926:15;4918:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;4992:33;5015:2;5019:5;;4992:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:22;:33::i;:::-;4984:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;5125:4;5108:10;:14;5119:2;5108:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;5208:22;5228:1;5208:15;;:19;;:22;;;;:::i;:::-;5190:15;:40;;;;5335:15;5341:2;5345:4;5335:5;:15::i;:::-;5400:2;5394:15;;;5404:4;5394:15;;;;;;:::i;:::-;;;;;;;;4756:660;;;:::o;3976:149:2:-;4065:7;4091:11;:18;4103:5;4091:18;;;;;;;;;;;;;;;:27;4110:7;4091:27;;;;;;;;;;;;;;;;4084:34;;3976:149;;;;:::o;2258:123:6:-;2329:7;2359:15;;2352:22;;2258:123;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;10119:370:2:-;10267:1;10250:19;;:5;:19;;;10242:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10347:1;10328:21;;:7;:21;;;10320:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10429:6;10399:11;:18;10411:5;10399:18;;;;;;;;;;;;;;;:27;10418:7;10399:27;;;;;;;;;;;;;;;:36;;;;10466:7;10450:32;;10459:5;10450:32;;;10475:6;10450:32;;;;;;:::i;:::-;;;;;;;;10119:370;;;:::o;3278:304:6:-;3398:4;3418:12;3460:7;3443:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;3433:36;;;;;;3418:51;;3479:16;3498:49;3517:5;527:66;3524:16;;3542:4;3498:18;:49::i;:::-;3479:68;;3564:11;3557:18;;;;3278:304;;;;:::o;10770:441:2:-;10900:24;10927:25;10937:5;10944:7;10927:9;:25::i;:::-;10900:52;;10986:17;10966:16;:37;10962:243;;11047:6;11027:16;:26;;11019:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11129:51;11138:5;11145:7;11173:6;11154:16;:25;11129:8;:51::i;:::-;10962:243;10890:321;10770:441;;;:::o;7484:651::-;7626:1;7610:18;;:4;:18;;;7602:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7702:1;7688:16;;:2;:16;;;7680:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7755:38;7776:4;7782:2;7786:6;7755:20;:38::i;:::-;7804:19;7826:9;:15;7836:4;7826:15;;;;;;;;;;;;;;;;7804:37;;7874:6;7859:11;:21;;7851:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7989:6;7975:11;:20;7957:9;:15;7967:4;7957:15;;;;;;;;;;;;;;;:38;;;;8032:6;8015:9;:13;8025:2;8015:13;;;;;;;;;;;;;;;;:23;;;;;;;:::i;:::-;;;;;;;;8069:2;8054:26;;8063:4;8054:26;;;8073:6;8054:26;;;;;;:::i;:::-;;;;;;;;8091:37;8111:4;8117:2;8121:6;8091:19;:37::i;:::-;7592:543;7484:651;;;:::o;2664:153:6:-;2734:7;2764:46;2803:6;2765:32;2785:11;;2765:15;:19;;:32;;;;:::i;:::-;2764:38;;:46;;;;:::i;:::-;2757:53;;2664:153;:::o;8411:389:2:-;8513:1;8494:21;;:7;:21;;;8486:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8562:49;8591:1;8595:7;8604:6;8562:20;:49::i;:::-;8638:6;8622:12;;:22;;;;;;;:::i;:::-;;;;;;;;8676:6;8654:9;:18;8664:7;8654:18;;;;;;;;;;;;;;;;:28;;;;;;;:::i;:::-;;;;;;;;8718:7;8697:37;;8714:1;8697:37;;;8727:6;8697:37;;;;;;:::i;:::-;;;;;;;;8745:48;8773:1;8777:7;8786:6;8745:19;:48::i;:::-;8411:389;;:::o;2755:96:1:-;2813:7;2843:1;2839;:5;;;;:::i;:::-;2832:12;;2755:96;;;;:::o;1153:184:0:-;1274:4;1326;1297:25;1310:5;1317:4;1297:12;:25::i;:::-;:33;1290:40;;1153:184;;;;;:::o;11795:121:2:-;;;;:::o;12504:120::-;;;;:::o;3122:96:1:-;3180:7;3210:1;3206;:5;;;;:::i;:::-;3199:12;;3122:96;;;;:::o;3850:::-;3908:7;3938:1;3934;:5;;;;:::i;:::-;3927:12;;3850:96;;;;:::o;1991:290:0:-;2074:7;2093:20;2116:4;2093:27;;2135:9;2130:116;2154:5;:12;2150:1;:16;2130:116;;;2202:33;2212:12;2226:5;2232:1;2226:8;;;;;;;;:::i;:::-;;;;;;;;2202:9;:33::i;:::-;2187:48;;2168:3;;;;;:::i;:::-;;;;2130:116;;;;2262:12;2255:19;;;1991:290;;;;:::o;8054:147::-;8117:7;8147:1;8143;:5;:51;;8174:20;8189:1;8192;8174:14;:20::i;:::-;8143:51;;;8151:20;8166:1;8169;8151:14;:20::i;:::-;8143:51;8136:58;;8054:147;;;;:::o;8207:261::-;8275:13;8379:1;8373:4;8366:15;8407:1;8401:4;8394:15;8447:4;8441;8431:21;8422:30;;8207:261;;;;:::o;7:99:7:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1397:75::-;1430:6;1463:2;1457:9;1447:19;;1397:75;:::o;1478:117::-;1587:1;1584;1577:12;1601:117;1710:1;1707;1700:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:117::-;3603:1;3600;3593:12;3617:180;3665:77;3662:1;3655:88;3762:4;3759:1;3752:15;3786:4;3783:1;3776:15;3803:281;3886:27;3908:4;3886:27;:::i;:::-;3878:6;3874:40;4016:6;4004:10;4001:22;3980:18;3968:10;3965:34;3962:62;3959:88;;;4027:18;;:::i;:::-;3959:88;4067:10;4063:2;4056:22;3846:238;3803:281;;:::o;4090:129::-;4124:6;4151:20;;:::i;:::-;4141:30;;4180:33;4208:4;4200:6;4180:33;:::i;:::-;4090:129;;;:::o;4225:311::-;4302:4;4392:18;4384:6;4381:30;4378:56;;;4414:18;;:::i;:::-;4378:56;4464:4;4456:6;4452:17;4444:25;;4524:4;4518;4514:15;4506:23;;4225:311;;;:::o;4542:117::-;4651:1;4648;4641:12;4665:77;4702:7;4731:5;4720:16;;4665:77;;;:::o;4748:122::-;4821:24;4839:5;4821:24;:::i;:::-;4814:5;4811:35;4801:63;;4860:1;4857;4850:12;4801:63;4748:122;:::o;4876:139::-;4922:5;4960:6;4947:20;4938:29;;4976:33;5003:5;4976:33;:::i;:::-;4876:139;;;;:::o;5038:710::-;5134:5;5159:81;5175:64;5232:6;5175:64;:::i;:::-;5159:81;:::i;:::-;5150:90;;5260:5;5289:6;5282:5;5275:21;5323:4;5316:5;5312:16;5305:23;;5376:4;5368:6;5364:17;5356:6;5352:30;5405:3;5397:6;5394:15;5391:122;;;5424:79;;:::i;:::-;5391:122;5539:6;5522:220;5556:6;5551:3;5548:15;5522:220;;;5631:3;5660:37;5693:3;5681:10;5660:37;:::i;:::-;5655:3;5648:50;5727:4;5722:3;5718:14;5711:21;;5598:144;5582:4;5577:3;5573:14;5566:21;;5522:220;;;5526:21;5140:608;;5038:710;;;;;:::o;5771:370::-;5842:5;5891:3;5884:4;5876:6;5872:17;5868:27;5858:122;;5899:79;;:::i;:::-;5858:122;6016:6;6003:20;6041:94;6131:3;6123:6;6116:4;6108:6;6104:17;6041:94;:::i;:::-;6032:103;;5848:293;5771:370;;;;:::o;6147:684::-;6240:6;6248;6297:2;6285:9;6276:7;6272:23;6268:32;6265:119;;;6303:79;;:::i;:::-;6265:119;6423:1;6448:53;6493:7;6484:6;6473:9;6469:22;6448:53;:::i;:::-;6438:63;;6394:117;6578:2;6567:9;6563:18;6550:32;6609:18;6601:6;6598:30;6595:117;;;6631:79;;:::i;:::-;6595:117;6736:78;6806:7;6797:6;6786:9;6782:22;6736:78;:::i;:::-;6726:88;;6521:303;6147:684;;;;;:::o;6837:118::-;6924:24;6942:5;6924:24;:::i;:::-;6919:3;6912:37;6837:118;;:::o;6961:222::-;7054:4;7092:2;7081:9;7077:18;7069:26;;7105:71;7173:1;7162:9;7158:17;7149:6;7105:71;:::i;:::-;6961:222;;;;:::o;7189:619::-;7266:6;7274;7282;7331:2;7319:9;7310:7;7306:23;7302:32;7299:119;;;7337:79;;:::i;:::-;7299:119;7457:1;7482:53;7527:7;7518:6;7507:9;7503:22;7482:53;:::i;:::-;7472:63;;7428:117;7584:2;7610:53;7655:7;7646:6;7635:9;7631:22;7610:53;:::i;:::-;7600:63;;7555:118;7712:2;7738:53;7783:7;7774:6;7763:9;7759:22;7738:53;:::i;:::-;7728:63;;7683:118;7189:619;;;;;:::o;7814:86::-;7849:7;7889:4;7882:5;7878:16;7867:27;;7814:86;;;:::o;7906:112::-;7989:22;8005:5;7989:22;:::i;:::-;7984:3;7977:35;7906:112;;:::o;8024:214::-;8113:4;8151:2;8140:9;8136:18;8128:26;;8164:67;8228:1;8217:9;8213:17;8204:6;8164:67;:::i;:::-;8024:214;;;;:::o;8244:329::-;8303:6;8352:2;8340:9;8331:7;8327:23;8323:32;8320:119;;;8358:79;;:::i;:::-;8320:119;8478:1;8503:53;8548:7;8539:6;8528:9;8524:22;8503:53;:::i;:::-;8493:63;;8449:117;8244:329;;;;:::o;8579:117::-;8688:1;8685;8678:12;8719:568;8792:8;8802:6;8852:3;8845:4;8837:6;8833:17;8829:27;8819:122;;8860:79;;:::i;:::-;8819:122;8973:6;8960:20;8950:30;;9003:18;8995:6;8992:30;8989:117;;;9025:79;;:::i;:::-;8989:117;9139:4;9131:6;9127:17;9115:29;;9193:3;9185:4;9177:6;9173:17;9163:8;9159:32;9156:41;9153:128;;;9200:79;;:::i;:::-;9153:128;8719:568;;;;;:::o;9293:704::-;9388:6;9396;9404;9453:2;9441:9;9432:7;9428:23;9424:32;9421:119;;;9459:79;;:::i;:::-;9421:119;9579:1;9604:53;9649:7;9640:6;9629:9;9625:22;9604:53;:::i;:::-;9594:63;;9550:117;9734:2;9723:9;9719:18;9706:32;9765:18;9757:6;9754:30;9751:117;;;9787:79;;:::i;:::-;9751:117;9900:80;9972:7;9963:6;9952:9;9948:22;9900:80;:::i;:::-;9882:98;;;;9677:313;9293:704;;;;;:::o;10003:474::-;10071:6;10079;10128:2;10116:9;10107:7;10103:23;10099:32;10096:119;;;10134:79;;:::i;:::-;10096:119;10254:1;10279:53;10324:7;10315:6;10304:9;10300:22;10279:53;:::i;:::-;10269:63;;10225:117;10381:2;10407:53;10452:7;10443:6;10432:9;10428:22;10407:53;:::i;:::-;10397:63;;10352:118;10003:474;;;;;:::o;10483:180::-;10531:77;10528:1;10521:88;10628:4;10625:1;10618:15;10652:4;10649:1;10642:15;10669:320;10713:6;10750:1;10744:4;10740:12;10730:22;;10797:1;10791:4;10787:12;10818:18;10808:81;;10874:4;10866:6;10862:17;10852:27;;10808:81;10936:2;10928:6;10925:14;10905:18;10902:38;10899:84;;10955:18;;:::i;:::-;10899:84;10720:269;10669:320;;;:::o;10995:180::-;11043:77;11040:1;11033:88;11140:4;11137:1;11130:15;11164:4;11161:1;11154:15;11181:305;11221:3;11240:20;11258:1;11240:20;:::i;:::-;11235:25;;11274:20;11292:1;11274:20;:::i;:::-;11269:25;;11428:1;11360:66;11356:74;11353:1;11350:81;11347:107;;;11434:18;;:::i;:::-;11347:107;11478:1;11475;11471:9;11464:16;;11181:305;;;;:::o;11492:176::-;11632:28;11628:1;11620:6;11616:14;11609:52;11492:176;:::o;11674:366::-;11816:3;11837:67;11901:2;11896:3;11837:67;:::i;:::-;11830:74;;11913:93;12002:3;11913:93;:::i;:::-;12031:2;12026:3;12022:12;12015:19;;11674:366;;;:::o;12046:419::-;12212:4;12250:2;12239:9;12235:18;12227:26;;12299:9;12293:4;12289:20;12285:1;12274:9;12270:17;12263:47;12327:131;12453:4;12327:131;:::i;:::-;12319:139;;12046:419;;;:::o;12471:238::-;12611:34;12607:1;12599:6;12595:14;12588:58;12680:21;12675:2;12667:6;12663:15;12656:46;12471:238;:::o;12715:366::-;12857:3;12878:67;12942:2;12937:3;12878:67;:::i;:::-;12871:74;;12954:93;13043:3;12954:93;:::i;:::-;13072:2;13067:3;13063:12;13056:19;;12715:366;;;:::o;13087:419::-;13253:4;13291:2;13280:9;13276:18;13268:26;;13340:9;13334:4;13330:20;13326:1;13315:9;13311:17;13304:47;13368:131;13494:4;13368:131;:::i;:::-;13360:139;;13087:419;;;:::o;13512:224::-;13652:34;13648:1;13640:6;13636:14;13629:58;13721:7;13716:2;13708:6;13704:15;13697:32;13512:224;:::o;13742:366::-;13884:3;13905:67;13969:2;13964:3;13905:67;:::i;:::-;13898:74;;13981:93;14070:3;13981:93;:::i;:::-;14099:2;14094:3;14090:12;14083:19;;13742:366;;;:::o;14114:419::-;14280:4;14318:2;14307:9;14303:18;14295:26;;14367:9;14361:4;14357:20;14353:1;14342:9;14338:17;14331:47;14395:131;14521:4;14395:131;:::i;:::-;14387:139;;14114:419;;;:::o;14539:172::-;14679:24;14675:1;14667:6;14663:14;14656:48;14539:172;:::o;14717:366::-;14859:3;14880:67;14944:2;14939:3;14880:67;:::i;:::-;14873:74;;14956:93;15045:3;14956:93;:::i;:::-;15074:2;15069:3;15065:12;15058:19;;14717:366;;;:::o;15089:419::-;15255:4;15293:2;15282:9;15278:18;15270:26;;15342:9;15336:4;15332:20;15328:1;15317:9;15313:17;15306:47;15370:131;15496:4;15370:131;:::i;:::-;15362:139;;15089:419;;;:::o;15514:178::-;15654:30;15650:1;15642:6;15638:14;15631:54;15514:178;:::o;15698:366::-;15840:3;15861:67;15925:2;15920:3;15861:67;:::i;:::-;15854:74;;15937:93;16026:3;15937:93;:::i;:::-;16055:2;16050:3;16046:12;16039:19;;15698:366;;;:::o;16070:419::-;16236:4;16274:2;16263:9;16259:18;16251:26;;16323:9;16317:4;16313:20;16309:1;16298:9;16294:17;16287:47;16351:131;16477:4;16351:131;:::i;:::-;16343:139;;16070:419;;;:::o;16495:179::-;16635:31;16631:1;16623:6;16619:14;16612:55;16495:179;:::o;16680:366::-;16822:3;16843:67;16907:2;16902:3;16843:67;:::i;:::-;16836:74;;16919:93;17008:3;16919:93;:::i;:::-;17037:2;17032:3;17028:12;17021:19;;16680:366;;;:::o;17052:419::-;17218:4;17256:2;17245:9;17241:18;17233:26;;17305:9;17299:4;17295:20;17291:1;17280:9;17276:17;17269:47;17333:131;17459:4;17333:131;:::i;:::-;17325:139;;17052:419;;;:::o;17477:88::-;17525:7;17554:5;17543:16;;17477:88;;;:::o;17571:60::-;17599:3;17620:5;17613:12;;17571:60;;;:::o;17637:164::-;17698:9;17731:64;17749:45;17758:35;17787:5;17758:35;:::i;:::-;17749:45;:::i;:::-;17731:64;:::i;:::-;17718:77;;17637:164;;;:::o;17807:153::-;17905:48;17947:5;17905:48;:::i;:::-;17900:3;17893:61;17807:153;;:::o;17966:244::-;18070:4;18108:2;18097:9;18093:18;18085:26;;18121:82;18200:1;18189:9;18185:17;18176:6;18121:82;:::i;:::-;17966:244;;;;:::o;18216:223::-;18356:34;18352:1;18344:6;18340:14;18333:58;18425:6;18420:2;18412:6;18408:15;18401:31;18216:223;:::o;18445:366::-;18587:3;18608:67;18672:2;18667:3;18608:67;:::i;:::-;18601:74;;18684:93;18773:3;18684:93;:::i;:::-;18802:2;18797:3;18793:12;18786:19;;18445:366;;;:::o;18817:419::-;18983:4;19021:2;19010:9;19006:18;18998:26;;19070:9;19064:4;19060:20;19056:1;19045:9;19041:17;19034:47;19098:131;19224:4;19098:131;:::i;:::-;19090:139;;18817:419;;;:::o;19242:221::-;19382:34;19378:1;19370:6;19366:14;19359:58;19451:4;19446:2;19438:6;19434:15;19427:29;19242:221;:::o;19469:366::-;19611:3;19632:67;19696:2;19691:3;19632:67;:::i;:::-;19625:74;;19708:93;19797:3;19708:93;:::i;:::-;19826:2;19821:3;19817:12;19810:19;;19469:366;;;:::o;19841:419::-;20007:4;20045:2;20034:9;20030:18;20022:26;;20094:9;20088:4;20084:20;20080:1;20069:9;20065:17;20058:47;20122:131;20248:4;20122:131;:::i;:::-;20114:139;;19841:419;;;:::o;20266:94::-;20299:8;20347:5;20343:2;20339:14;20318:35;;20266:94;;;:::o;20366:::-;20405:7;20434:20;20448:5;20434:20;:::i;:::-;20423:31;;20366:94;;;:::o;20466:100::-;20505:7;20534:26;20554:5;20534:26;:::i;:::-;20523:37;;20466:100;;;:::o;20572:157::-;20677:45;20697:24;20715:5;20697:24;:::i;:::-;20677:45;:::i;:::-;20672:3;20665:58;20572:157;;:::o;20735:256::-;20847:3;20862:75;20933:3;20924:6;20862:75;:::i;:::-;20962:2;20957:3;20953:12;20946:19;;20982:3;20975:10;;20735:256;;;;:::o;20997:179::-;21137:31;21133:1;21125:6;21121:14;21114:55;20997:179;:::o;21182:366::-;21324:3;21345:67;21409:2;21404:3;21345:67;:::i;:::-;21338:74;;21421:93;21510:3;21421:93;:::i;:::-;21539:2;21534:3;21530:12;21523:19;;21182:366;;;:::o;21554:419::-;21720:4;21758:2;21747:9;21743:18;21735:26;;21807:9;21801:4;21797:20;21793:1;21782:9;21778:17;21771:47;21835:131;21961:4;21835:131;:::i;:::-;21827:139;;21554:419;;;:::o;21979:224::-;22119:34;22115:1;22107:6;22103:14;22096:58;22188:7;22183:2;22175:6;22171:15;22164:32;21979:224;:::o;22209:366::-;22351:3;22372:67;22436:2;22431:3;22372:67;:::i;:::-;22365:74;;22448:93;22537:3;22448:93;:::i;:::-;22566:2;22561:3;22557:12;22550:19;;22209:366;;;:::o;22581:419::-;22747:4;22785:2;22774:9;22770:18;22762:26;;22834:9;22828:4;22824:20;22820:1;22809:9;22805:17;22798:47;22862:131;22988:4;22862:131;:::i;:::-;22854:139;;22581:419;;;:::o;23006:222::-;23146:34;23142:1;23134:6;23130:14;23123:58;23215:5;23210:2;23202:6;23198:15;23191:30;23006:222;:::o;23234:366::-;23376:3;23397:67;23461:2;23456:3;23397:67;:::i;:::-;23390:74;;23473:93;23562:3;23473:93;:::i;:::-;23591:2;23586:3;23582:12;23575:19;;23234:366;;;:::o;23606:419::-;23772:4;23810:2;23799:9;23795:18;23787:26;;23859:9;23853:4;23849:20;23845:1;23834:9;23830:17;23823:47;23887:131;24013:4;23887:131;:::i;:::-;23879:139;;23606:419;;;:::o;24031:225::-;24171:34;24167:1;24159:6;24155:14;24148:58;24240:8;24235:2;24227:6;24223:15;24216:33;24031:225;:::o;24262:366::-;24404:3;24425:67;24489:2;24484:3;24425:67;:::i;:::-;24418:74;;24501:93;24590:3;24501:93;:::i;:::-;24619:2;24614:3;24610:12;24603:19;;24262:366;;;:::o;24634:419::-;24800:4;24838:2;24827:9;24823:18;24815:26;;24887:9;24881:4;24877:20;24873:1;24862:9;24858:17;24851:47;24915:131;25041:4;24915:131;:::i;:::-;24907:139;;24634:419;;;:::o;25059:181::-;25199:33;25195:1;25187:6;25183:14;25176:57;25059:181;:::o;25246:366::-;25388:3;25409:67;25473:2;25468:3;25409:67;:::i;:::-;25402:74;;25485:93;25574:3;25485:93;:::i;:::-;25603:2;25598:3;25594:12;25587:19;;25246:366;;;:::o;25618:419::-;25784:4;25822:2;25811:9;25807:18;25799:26;;25871:9;25865:4;25861:20;25857:1;25846:9;25842:17;25835:47;25899:131;26025:4;25899:131;:::i;:::-;25891:139;;25618:419;;;:::o;26043:191::-;26083:4;26103:20;26121:1;26103:20;:::i;:::-;26098:25;;26137:20;26155:1;26137:20;:::i;:::-;26132:25;;26176:1;26173;26170:8;26167:34;;;26181:18;;:::i;:::-;26167:34;26226:1;26223;26219:9;26211:17;;26043:191;;;;:::o;26240:180::-;26288:77;26285:1;26278:88;26385:4;26382:1;26375:15;26409:4;26406:1;26399:15;26426:185;26466:1;26483:20;26501:1;26483:20;:::i;:::-;26478:25;;26517:20;26535:1;26517:20;:::i;:::-;26512:25;;26556:1;26546:35;;26561:18;;:::i;:::-;26546:35;26603:1;26600;26596:9;26591:14;;26426:185;;;;:::o;26617:180::-;26665:77;26662:1;26655:88;26762:4;26759:1;26752:15;26786:4;26783:1;26776:15;26803:233;26842:3;26865:24;26883:5;26865:24;:::i;:::-;26856:33;;26911:66;26904:5;26901:77;26898:103;;26981:18;;:::i;:::-;26898:103;27028:1;27021:5;27017:13;27010:20;;26803:233;;;:::o",
  source:
    'pragma solidity ^0.8.13;\n\nimport "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol";\nimport "@openzeppelin/contracts/utils/math/SafeMath.sol";\nimport "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol";\n\n\ncontract PulseInu is ERC20 {\n    using SafeMath for uint256;\n\n    constructor() ERC20("PulseInu", "PINU")\n    {\n         _launchTime = block.timestamp;\n    }\n\n    /// ============== Constants ==============\n\n    /* Root hash of the HEX Stakers Merkle tree */\n    bytes32 internal constant MERKLE_TREE_ROOT = 0x8f4e1c18aa0323d567b9abc6cf64f9626e82ef1b41a404b3f48bfa92eecb9142;\n\n    /* Benevolent Address (PINU TEST) */\n    address internal constant BENEVOLANT_ADDR = 0xE8088619b7796E7dB519e36970E8De2568a13397;\n\n    /* Length of airdrop claim phase */\n    uint256 internal constant CLAIM_PHASE_DAYS = 100;\n\n    /// ============== Contract Deploy ==============\n\n    /* Time of contract launch, set in constructor */\n    uint256 private _launchTime;\n\n    /* Number of airdrop token claims, initial 0*/\n    uint256 private _numberOfClaims;\n\n    /* HEX OA PLSD BA mint flag, initial false */\n    bool private _BaTokensMinted;\n\n    /// ============== Mutable Storage ==============\n\n    /* Mapping of addresses who have claimed tokens */\n    mapping(address => bool) public hasClaimed;\n\n    /// ============== Events ==============\n\n    /// @dev Emitted after a successful token claim\n    /// @param to recipient of claim\n    /// @param amount of tokens claimed\n\n    event Claim(address indexed to, uint256 amount);\n\n    /// ============== Functions ==============\n\n    /*\n     * @dev PUBLIC FUNCTION: Overridden decimals function\n     * @return contract decimals\n     */\n    function decimals()\n        public\n        view\n        virtual\n        override\n        returns (uint8)\n    {\n        return 12;\n    }\n\n    /*\n     * @dev PUBLIC FUNCTION: External helper for returning the contract launch time\n     * @return The contract launch time in epoch time\n     */\n    function launchTime()\n        public\n        view\n        returns (uint256)\n    {\n        return _launchTime;\n    }\n\n    /*\n     * @dev PUBLIC FUNCTION: External helper for returning the number of airdrop claims\n     * @return The total number of airdrop claims\n     */\n    function numberOfClaims()\n        public\n        view\n        returns (uint256)\n    {\n        return _numberOfClaims;\n    }\n\n    /*\n     * @dev PUBLIC FUNCTION: External helper for the current day number since launch time\n     * @return Current day number (zero-based)\n     */\n    function currentDay()\n        external\n        view\n        returns (uint256)\n    {\n        return _currentDay();\n    }\n\n    function _currentDay()\n        internal\n        view\n        returns (uint256)\n    {\n        return (block.timestamp.sub(_launchTime)).div(1 days);\n    }\n\n    /*\n     * @dev PUBLIC FUNCTION: Determine if an address and amount are eligble for the airdrop\n     * @param hexAddr HEX staker address\n     * @param plsdAmount PLSD token amount\n     * @param proof Merkle tree proof\n     * @return true or false\n     */\n    function hexAddressIsClaimable(address hexAddr, bytes32[] memory proof)\n        external\n        pure\n        returns (bool)\n    {\n        return _hexAddressIsClaimable(hexAddr, proof);\n    }\n\n    function _hexAddressIsClaimable(address hexAddr, bytes32[] memory proof)\n        internal\n        pure\n        returns (bool)\n    {\n        bytes32 leaf = keccak256(abi.encodePacked(hexAddr));\n        bool isValidLeaf = MerkleProof.verify(proof, MERKLE_TREE_ROOT, leaf);\n        return isValidLeaf;\n    }\n\n    /*\n     * @dev PUBLIC FUNCTION: Mint HEX Origin & PLSD Benevolant Address tokens. Must be after claim phase has ended. Tokens can only be minted once.\n     */\n    function mintBaTokens()\n        external\n    {\n        // Claim phase must be over // REMOVE FOR TESTING\n        require(_currentDay() > CLAIM_PHASE_DAYS, "Claim phase has not ended.");\n\n        // HEX OA & PLSD BA tokens must not have already been minted\n        require(!_BaTokensMinted, "Benevolent Address Tokens have already been minted.");\n\n        // HEX OA & PLSD BA tokens can only be minted once, set flag\n        _BaTokensMinted = true;\n\n        // Determine the amount of tokens each address will receive and mint those tokens\n        uint256 tokenPayout = 1000; // Set arbitrary for testing\n        _mint(BENEVOLANT_ADDR, tokenPayout);\n    }\n\n    /*\n     * @dev PUBLIC FUNCTION: External function to claim airdrop tokens. Must be before the end of the claim phase.\n     * Tokens can only be minted once per unique address. The address must be within the airdrop set.\n     * @param to HEX staker address\n     * @param amount PLSD token amount\n     * @param proof Merkle tree proof\n     */\n    function claim(address to, bytes32[] calldata proof)\n        external\n    {\n        require(_currentDay() <= CLAIM_PHASE_DAYS, "Claim phase has ended.");\n        require(!hasClaimed[to], "Address has already claimed.");\n        require(_hexAddressIsClaimable(to, proof), "HEX Address is not claimable.");\n\n        // Set claim flag for address\n        hasClaimed[to] = true;\n\n        // Increment the number of claims counter\n        _numberOfClaims = _numberOfClaims.add(1);\n\n        // TODO: Decide what the fixed claim amount will be\n        // Mint tokens to address\n        _mint(to, 1000);\n\n        // Emit claim event\n        emit Claim(to, 1000);\n    }\n}\n',
  sourcePath: "/Users/erik/Dev/erik/pulseinu/contracts/PulseInu.sol",
  ast: {
    absolutePath: "project:/contracts/PulseInu.sol",
    exportedSymbols: {
      Context: [1524],
      ERC20: [1399],
      IERC20: [1477],
      IERC20Metadata: [1502],
      MerkleProof: [501],
      PulseInu: [1762],
      SafeMath: [813],
    },
    id: 1763,
    nodeType: "SourceUnit",
    nodes: [
      {
        id: 1526,
        literals: ["solidity", "^", "0.8", ".13"],
        nodeType: "PragmaDirective",
        src: "0:24:6",
      },
      {
        absolutePath: "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        file: "openzeppelin-solidity/contracts/token/ERC20/ERC20.sol",
        id: 1527,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 1763,
        sourceUnit: 1400,
        src: "26:63:6",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        file: "@openzeppelin/contracts/utils/math/SafeMath.sol",
        id: 1528,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 1763,
        sourceUnit: 814,
        src: "90:57:6",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        absolutePath:
          "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        file: "@openzeppelin/contracts/utils/cryptography/MerkleProof.sol",
        id: 1529,
        nameLocation: "-1:-1:-1",
        nodeType: "ImportDirective",
        scope: 1763,
        sourceUnit: 502,
        src: "148:68:6",
        symbolAliases: [],
        unitAlias: "",
      },
      {
        abstract: false,
        baseContracts: [
          {
            baseName: {
              id: 1530,
              name: "ERC20",
              nodeType: "IdentifierPath",
              referencedDeclaration: 1399,
              src: "240:5:6",
            },
            id: 1531,
            nodeType: "InheritanceSpecifier",
            src: "240:5:6",
          },
        ],
        canonicalName: "PulseInu",
        contractDependencies: [],
        contractKind: "contract",
        fullyImplemented: true,
        id: 1762,
        linearizedBaseContracts: [1762, 1399, 1502, 1477, 1524],
        name: "PulseInu",
        nameLocation: "228:8:6",
        nodeType: "ContractDefinition",
        nodes: [
          {
            global: false,
            id: 1534,
            libraryName: {
              id: 1532,
              name: "SafeMath",
              nodeType: "IdentifierPath",
              referencedDeclaration: 813,
              src: "258:8:6",
            },
            nodeType: "UsingForDirective",
            src: "252:27:6",
            typeName: {
              id: 1533,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "271:7:6",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
          },
          {
            body: {
              id: 1546,
              nodeType: "Block",
              src: "329:47:6",
              statements: [
                {
                  expression: {
                    id: 1544,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 1541,
                      name: "_launchTime",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1560,
                      src: "340:11:6",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      expression: {
                        id: 1542,
                        name: "block",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 4294967292,
                        src: "354:5:6",
                        typeDescriptions: {
                          typeIdentifier: "t_magic_block",
                          typeString: "block",
                        },
                      },
                      id: 1543,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "timestamp",
                      nodeType: "MemberAccess",
                      src: "354:15:6",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "340:29:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 1545,
                  nodeType: "ExpressionStatement",
                  src: "340:29:6",
                },
              ],
            },
            id: 1547,
            implemented: true,
            kind: "constructor",
            modifiers: [
              {
                arguments: [
                  {
                    hexValue: "50756c7365496e75",
                    id: 1537,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "305:10:6",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_894bb51e8de5459b71a9289e89cf7bb7b0871a4a09021526f4e685c6ac213ac1",
                      typeString: 'literal_string "PulseInu"',
                    },
                    value: "PulseInu",
                  },
                  {
                    hexValue: "50494e55",
                    id: 1538,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "string",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "317:6:6",
                    typeDescriptions: {
                      typeIdentifier:
                        "t_stringliteral_3d2ceaf394fa6e92964ea9df1723d8f6e49b9224aa121d37cdbba8c8e5cbe551",
                      typeString: 'literal_string "PINU"',
                    },
                    value: "PINU",
                  },
                ],
                id: 1539,
                kind: "baseConstructorSpecifier",
                modifierName: {
                  id: 1536,
                  name: "ERC20",
                  nodeType: "IdentifierPath",
                  referencedDeclaration: 1399,
                  src: "299:5:6",
                },
                nodeType: "ModifierInvocation",
                src: "299:25:6",
              },
            ],
            name: "",
            nameLocation: "-1:-1:-1",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1535,
              nodeType: "ParameterList",
              parameters: [],
              src: "296:2:6",
            },
            returnParameters: {
              id: 1540,
              nodeType: "ParameterList",
              parameters: [],
              src: "329:0:6",
            },
            scope: 1762,
            src: "285:91:6",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "public",
          },
          {
            constant: true,
            documentation: {
              id: 1548,
              nodeType: "StructuredDocumentation",
              src: "382:44:6",
              text: "============== Constants ==============",
            },
            id: 1551,
            mutability: "constant",
            name: "MERKLE_TREE_ROOT",
            nameLocation: "508:16:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "482:111:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_bytes32",
              typeString: "bytes32",
            },
            typeName: {
              id: 1549,
              name: "bytes32",
              nodeType: "ElementaryTypeName",
              src: "482:7:6",
              typeDescriptions: {
                typeIdentifier: "t_bytes32",
                typeString: "bytes32",
              },
            },
            value: {
              hexValue:
                "307838663465316331386161303332336435363762396162633663663634663936323665383265663162343161343034623366343862666139326565636239313432",
              id: 1550,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "527:66:6",
              typeDescriptions: {
                typeIdentifier:
                  "t_rational_64818745332300618956964523102922801671796550745385670565934864909335792423234_by_1",
                typeString: "int_const 6481...(69 digits omitted)...3234",
              },
              value:
                "0x8f4e1c18aa0323d567b9abc6cf64f9626e82ef1b41a404b3f48bfa92eecb9142",
            },
            visibility: "internal",
          },
          {
            constant: true,
            id: 1554,
            mutability: "constant",
            name: "BENEVOLANT_ADDR",
            nameLocation: "667:15:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "641:86:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_address",
              typeString: "address",
            },
            typeName: {
              id: 1552,
              name: "address",
              nodeType: "ElementaryTypeName",
              src: "641:7:6",
              stateMutability: "nonpayable",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
            },
            value: {
              hexValue:
                "307845383038383631396237373936453764423531396533363937304538446532353638613133333937",
              id: 1553,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "685:42:6",
              typeDescriptions: {
                typeIdentifier: "t_address",
                typeString: "address",
              },
              value: "0xE8088619b7796E7dB519e36970E8De2568a13397",
            },
            visibility: "internal",
          },
          {
            constant: true,
            id: 1557,
            mutability: "constant",
            name: "CLAIM_PHASE_DAYS",
            nameLocation: "800:16:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "774:48:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 1555,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "774:7:6",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            value: {
              hexValue: "313030",
              id: 1556,
              isConstant: false,
              isLValue: false,
              isPure: true,
              kind: "number",
              lValueRequested: false,
              nodeType: "Literal",
              src: "819:3:6",
              typeDescriptions: {
                typeIdentifier: "t_rational_100_by_1",
                typeString: "int_const 100",
              },
              value: "100",
            },
            visibility: "internal",
          },
          {
            constant: false,
            documentation: {
              id: 1558,
              nodeType: "StructuredDocumentation",
              src: "829:50:6",
              text: "============== Contract Deploy ==============",
            },
            id: 1560,
            mutability: "mutable",
            name: "_launchTime",
            nameLocation: "954:11:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "938:27:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 1559,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "938:7:6",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1562,
            mutability: "mutable",
            name: "_numberOfClaims",
            nameLocation: "1039:15:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "1023:31:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_uint256",
              typeString: "uint256",
            },
            typeName: {
              id: 1561,
              name: "uint256",
              nodeType: "ElementaryTypeName",
              src: "1023:7:6",
              typeDescriptions: {
                typeIdentifier: "t_uint256",
                typeString: "uint256",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            id: 1564,
            mutability: "mutable",
            name: "_BaTokensMinted",
            nameLocation: "1124:15:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "1111:28:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_bool",
              typeString: "bool",
            },
            typeName: {
              id: 1563,
              name: "bool",
              nodeType: "ElementaryTypeName",
              src: "1111:4:6",
              typeDescriptions: {
                typeIdentifier: "t_bool",
                typeString: "bool",
              },
            },
            visibility: "private",
          },
          {
            constant: false,
            documentation: {
              id: 1565,
              nodeType: "StructuredDocumentation",
              src: "1146:50:6",
              text: "============== Mutable Storage ==============",
            },
            functionSelector: "73b2e80e",
            id: 1569,
            mutability: "mutable",
            name: "hasClaimed",
            nameLocation: "1288:10:6",
            nodeType: "VariableDeclaration",
            scope: 1762,
            src: "1256:42:6",
            stateVariable: true,
            storageLocation: "default",
            typeDescriptions: {
              typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
              typeString: "mapping(address => bool)",
            },
            typeName: {
              id: 1568,
              keyType: {
                id: 1566,
                name: "address",
                nodeType: "ElementaryTypeName",
                src: "1264:7:6",
                typeDescriptions: {
                  typeIdentifier: "t_address",
                  typeString: "address",
                },
              },
              nodeType: "Mapping",
              src: "1256:24:6",
              typeDescriptions: {
                typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                typeString: "mapping(address => bool)",
              },
              valueType: {
                id: 1567,
                name: "bool",
                nodeType: "ElementaryTypeName",
                src: "1275:4:6",
                typeDescriptions: {
                  typeIdentifier: "t_bool",
                  typeString: "bool",
                },
              },
            },
            visibility: "public",
          },
          {
            anonymous: false,
            documentation: {
              id: 1570,
              nodeType: "StructuredDocumentation",
              src: "1351:125:6",
              text: "@dev Emitted after a successful token claim\n @param to recipient of claim\n @param amount of tokens claimed",
            },
            eventSelector:
              "47cee97cb7acd717b3c0aa1435d004cd5b3c8c57d70dbceb4e4458bbd60e39d4",
            id: 1576,
            name: "Claim",
            nameLocation: "1487:5:6",
            nodeType: "EventDefinition",
            parameters: {
              id: 1575,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1572,
                  indexed: true,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "1509:2:6",
                  nodeType: "VariableDeclaration",
                  scope: 1576,
                  src: "1493:18:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1571,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "1493:7:6",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1574,
                  indexed: false,
                  mutability: "mutable",
                  name: "amount",
                  nameLocation: "1521:6:6",
                  nodeType: "VariableDeclaration",
                  scope: 1576,
                  src: "1513:14:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1573,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "1513:7:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1492:36:6",
            },
            src: "1481:48:6",
          },
          {
            baseFunctions: [888],
            body: {
              id: 1585,
              nodeType: "Block",
              src: "1799:26:6",
              statements: [
                {
                  expression: {
                    hexValue: "3132",
                    id: 1583,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "1816:2:6",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_12_by_1",
                      typeString: "int_const 12",
                    },
                    value: "12",
                  },
                  functionReturnParameters: 1582,
                  id: 1584,
                  nodeType: "Return",
                  src: "1809:9:6",
                },
              ],
            },
            documentation: {
              id: 1577,
              nodeType: "StructuredDocumentation",
              src: "1535:44:6",
              text: "============== Functions ==============",
            },
            functionSelector: "313ce567",
            id: 1586,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "decimals",
            nameLocation: "1699:8:6",
            nodeType: "FunctionDefinition",
            overrides: {
              id: 1579,
              nodeType: "OverrideSpecifier",
              overrides: [],
              src: "1762:8:6",
            },
            parameters: {
              id: 1578,
              nodeType: "ParameterList",
              parameters: [],
              src: "1707:2:6",
            },
            returnParameters: {
              id: 1582,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1581,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1586,
                  src: "1788:5:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint8",
                    typeString: "uint8",
                  },
                  typeName: {
                    id: 1580,
                    name: "uint8",
                    nodeType: "ElementaryTypeName",
                    src: "1788:5:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint8",
                      typeString: "uint8",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "1787:7:6",
            },
            scope: 1762,
            src: "1690:135:6",
            stateMutability: "view",
            virtual: true,
            visibility: "public",
          },
          {
            body: {
              id: 1593,
              nodeType: "Block",
              src: "2064:35:6",
              statements: [
                {
                  expression: {
                    id: 1591,
                    name: "_launchTime",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 1560,
                    src: "2081:11:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1590,
                  id: 1592,
                  nodeType: "Return",
                  src: "2074:18:6",
                },
              ],
            },
            functionSelector: "790ca413",
            id: 1594,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "launchTime",
            nameLocation: "1993:10:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1587,
              nodeType: "ParameterList",
              parameters: [],
              src: "2003:2:6",
            },
            returnParameters: {
              id: 1590,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1589,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1594,
                  src: "2051:7:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1588,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2051:7:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2050:9:6",
            },
            scope: 1762,
            src: "1984:115:6",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1601,
              nodeType: "Block",
              src: "2342:39:6",
              statements: [
                {
                  expression: {
                    id: 1599,
                    name: "_numberOfClaims",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 1562,
                    src: "2359:15:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1598,
                  id: 1600,
                  nodeType: "Return",
                  src: "2352:22:6",
                },
              ],
            },
            functionSelector: "ee993375",
            id: 1602,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "numberOfClaims",
            nameLocation: "2267:14:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1595,
              nodeType: "ParameterList",
              parameters: [],
              src: "2281:2:6",
            },
            returnParameters: {
              id: 1598,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1597,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1602,
                  src: "2329:7:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1596,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2329:7:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2328:9:6",
            },
            scope: 1762,
            src: "2258:123:6",
            stateMutability: "view",
            virtual: false,
            visibility: "public",
          },
          {
            body: {
              id: 1610,
              nodeType: "Block",
              src: "2621:37:6",
              statements: [
                {
                  expression: {
                    arguments: [],
                    expression: {
                      argumentTypes: [],
                      id: 1607,
                      name: "_currentDay",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1627,
                      src: "2638:11:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_view$__$returns$_t_uint256_$",
                        typeString: "function () view returns (uint256)",
                      },
                    },
                    id: 1608,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2638:13:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1606,
                  id: 1609,
                  nodeType: "Return",
                  src: "2631:20:6",
                },
              ],
            },
            functionSelector: "5c9302c9",
            id: 1611,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "currentDay",
            nameLocation: "2548:10:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1603,
              nodeType: "ParameterList",
              parameters: [],
              src: "2558:2:6",
            },
            returnParameters: {
              id: 1606,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1605,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1611,
                  src: "2608:7:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1604,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2608:7:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2607:9:6",
            },
            scope: 1762,
            src: "2539:119:6",
            stateMutability: "view",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 1626,
              nodeType: "Block",
              src: "2747:70:6",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        hexValue: "31",
                        id: 1623,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "2803:6:6",
                        subdenomination: "days",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_86400_by_1",
                          typeString: "int_const 86400",
                        },
                        value: "1",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_rational_86400_by_1",
                          typeString: "int_const 86400",
                        },
                      ],
                      expression: {
                        components: [
                          {
                            arguments: [
                              {
                                id: 1619,
                                name: "_launchTime",
                                nodeType: "Identifier",
                                overloadedDeclarations: [],
                                referencedDeclaration: 1560,
                                src: "2785:11:6",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                            ],
                            expression: {
                              argumentTypes: [
                                {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              ],
                              expression: {
                                expression: {
                                  id: 1616,
                                  name: "block",
                                  nodeType: "Identifier",
                                  overloadedDeclarations: [],
                                  referencedDeclaration: 4294967292,
                                  src: "2765:5:6",
                                  typeDescriptions: {
                                    typeIdentifier: "t_magic_block",
                                    typeString: "block",
                                  },
                                },
                                id: 1617,
                                isConstant: false,
                                isLValue: false,
                                isPure: false,
                                lValueRequested: false,
                                memberName: "timestamp",
                                nodeType: "MemberAccess",
                                src: "2765:15:6",
                                typeDescriptions: {
                                  typeIdentifier: "t_uint256",
                                  typeString: "uint256",
                                },
                              },
                              id: 1618,
                              isConstant: false,
                              isLValue: false,
                              isPure: false,
                              lValueRequested: false,
                              memberName: "sub",
                              nodeType: "MemberAccess",
                              referencedDeclaration: 692,
                              src: "2765:19:6",
                              typeDescriptions: {
                                typeIdentifier:
                                  "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                typeString:
                                  "function (uint256,uint256) pure returns (uint256)",
                              },
                            },
                            id: 1620,
                            isConstant: false,
                            isLValue: false,
                            isPure: false,
                            kind: "functionCall",
                            lValueRequested: false,
                            names: [],
                            nodeType: "FunctionCall",
                            src: "2765:32:6",
                            tryCall: false,
                            typeDescriptions: {
                              typeIdentifier: "t_uint256",
                              typeString: "uint256",
                            },
                          },
                        ],
                        id: 1621,
                        isConstant: false,
                        isInlineArray: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "TupleExpression",
                        src: "2764:34:6",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      id: 1622,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "div",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 722,
                      src: "2764:38:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        typeString:
                          "function (uint256,uint256) pure returns (uint256)",
                      },
                    },
                    id: 1624,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "2764:46:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  functionReturnParameters: 1615,
                  id: 1625,
                  nodeType: "Return",
                  src: "2757:53:6",
                },
              ],
            },
            id: 1627,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_currentDay",
            nameLocation: "2673:11:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1612,
              nodeType: "ParameterList",
              parameters: [],
              src: "2684:2:6",
            },
            returnParameters: {
              id: 1615,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1614,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1627,
                  src: "2734:7:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_uint256",
                    typeString: "uint256",
                  },
                  typeName: {
                    id: 1613,
                    name: "uint256",
                    nodeType: "ElementaryTypeName",
                    src: "2734:7:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "2733:9:6",
            },
            scope: 1762,
            src: "2664:153:6",
            stateMutability: "view",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 1642,
              nodeType: "Block",
              src: "3210:62:6",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        id: 1638,
                        name: "hexAddr",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1629,
                        src: "3250:7:6",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1639,
                        name: "proof",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1632,
                        src: "3259:5:6",
                        typeDescriptions: {
                          typeIdentifier: "t_array$_t_bytes32_$dyn_memory_ptr",
                          typeString: "bytes32[] memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_array$_t_bytes32_$dyn_memory_ptr",
                          typeString: "bytes32[] memory",
                        },
                      ],
                      id: 1637,
                      name: "_hexAddressIsClaimable",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1674,
                      src: "3227:22:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                        typeString:
                          "function (address,bytes32[] memory) pure returns (bool)",
                      },
                    },
                    id: 1640,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3227:38:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  functionReturnParameters: 1636,
                  id: 1641,
                  nodeType: "Return",
                  src: "3220:45:6",
                },
              ],
            },
            functionSelector: "1456d8aa",
            id: 1643,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "hexAddressIsClaimable",
            nameLocation: "3090:21:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1633,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1629,
                  mutability: "mutable",
                  name: "hexAddr",
                  nameLocation: "3120:7:6",
                  nodeType: "VariableDeclaration",
                  scope: 1643,
                  src: "3112:15:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1628,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3112:7:6",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1632,
                  mutability: "mutable",
                  name: "proof",
                  nameLocation: "3146:5:6",
                  nodeType: "VariableDeclaration",
                  scope: 1643,
                  src: "3129:22:6",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_array$_t_bytes32_$dyn_memory_ptr",
                    typeString: "bytes32[]",
                  },
                  typeName: {
                    baseType: {
                      id: 1630,
                      name: "bytes32",
                      nodeType: "ElementaryTypeName",
                      src: "3129:7:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bytes32",
                        typeString: "bytes32",
                      },
                    },
                    id: 1631,
                    nodeType: "ArrayTypeName",
                    src: "3129:9:6",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_bytes32_$dyn_storage_ptr",
                      typeString: "bytes32[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3111:41:6",
            },
            returnParameters: {
              id: 1636,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1635,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1643,
                  src: "3200:4:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1634,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "3200:4:6",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3199:6:6",
            },
            scope: 1762,
            src: "3081:191:6",
            stateMutability: "pure",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 1673,
              nodeType: "Block",
              src: "3408:174:6",
              statements: [
                {
                  assignments: [1654],
                  declarations: [
                    {
                      constant: false,
                      id: 1654,
                      mutability: "mutable",
                      name: "leaf",
                      nameLocation: "3426:4:6",
                      nodeType: "VariableDeclaration",
                      scope: 1673,
                      src: "3418:12:6",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bytes32",
                        typeString: "bytes32",
                      },
                      typeName: {
                        id: 1653,
                        name: "bytes32",
                        nodeType: "ElementaryTypeName",
                        src: "3418:7:6",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes32",
                          typeString: "bytes32",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1661,
                  initialValue: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 1658,
                            name: "hexAddr",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1645,
                            src: "3460:7:6",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          ],
                          expression: {
                            id: 1656,
                            name: "abi",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 4294967295,
                            src: "3443:3:6",
                            typeDescriptions: {
                              typeIdentifier: "t_magic_abi",
                              typeString: "abi",
                            },
                          },
                          id: 1657,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          lValueRequested: false,
                          memberName: "encodePacked",
                          nodeType: "MemberAccess",
                          src: "3443:16:6",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            typeString:
                              "function () pure returns (bytes memory)",
                          },
                        },
                        id: 1659,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "3443:25:6",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bytes_memory_ptr",
                          typeString: "bytes memory",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bytes_memory_ptr",
                          typeString: "bytes memory",
                        },
                      ],
                      id: 1655,
                      name: "keccak256",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 4294967288,
                      src: "3433:9:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        typeString:
                          "function (bytes memory) pure returns (bytes32)",
                      },
                    },
                    id: 1660,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3433:36:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bytes32",
                      typeString: "bytes32",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3418:51:6",
                },
                {
                  assignments: [1663],
                  declarations: [
                    {
                      constant: false,
                      id: 1663,
                      mutability: "mutable",
                      name: "isValidLeaf",
                      nameLocation: "3484:11:6",
                      nodeType: "VariableDeclaration",
                      scope: 1673,
                      src: "3479:16:6",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      typeName: {
                        id: 1662,
                        name: "bool",
                        nodeType: "ElementaryTypeName",
                        src: "3479:4:6",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1670,
                  initialValue: {
                    arguments: [
                      {
                        id: 1666,
                        name: "proof",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1648,
                        src: "3517:5:6",
                        typeDescriptions: {
                          typeIdentifier: "t_array$_t_bytes32_$dyn_memory_ptr",
                          typeString: "bytes32[] memory",
                        },
                      },
                      {
                        id: 1667,
                        name: "MERKLE_TREE_ROOT",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1551,
                        src: "3524:16:6",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes32",
                          typeString: "bytes32",
                        },
                      },
                      {
                        id: 1668,
                        name: "leaf",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1654,
                        src: "3542:4:6",
                        typeDescriptions: {
                          typeIdentifier: "t_bytes32",
                          typeString: "bytes32",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_array$_t_bytes32_$dyn_memory_ptr",
                          typeString: "bytes32[] memory",
                        },
                        {
                          typeIdentifier: "t_bytes32",
                          typeString: "bytes32",
                        },
                        {
                          typeIdentifier: "t_bytes32",
                          typeString: "bytes32",
                        },
                      ],
                      expression: {
                        id: 1664,
                        name: "MerkleProof",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 501,
                        src: "3498:11:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_type$_t_contract$_MerkleProof_$501_$",
                          typeString: "type(library MerkleProof)",
                        },
                      },
                      id: 1665,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      lValueRequested: false,
                      memberName: "verify",
                      nodeType: "MemberAccess",
                      referencedDeclaration: 23,
                      src: "3498:18:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$",
                        typeString:
                          "function (bytes32[] memory,bytes32,bytes32) pure returns (bool)",
                      },
                    },
                    id: 1669,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3498:49:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "3479:68:6",
                },
                {
                  expression: {
                    id: 1671,
                    name: "isValidLeaf",
                    nodeType: "Identifier",
                    overloadedDeclarations: [],
                    referencedDeclaration: 1663,
                    src: "3564:11:6",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  functionReturnParameters: 1652,
                  id: 1672,
                  nodeType: "Return",
                  src: "3557:18:6",
                },
              ],
            },
            id: 1674,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "_hexAddressIsClaimable",
            nameLocation: "3287:22:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1649,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1645,
                  mutability: "mutable",
                  name: "hexAddr",
                  nameLocation: "3318:7:6",
                  nodeType: "VariableDeclaration",
                  scope: 1674,
                  src: "3310:15:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1644,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "3310:7:6",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1648,
                  mutability: "mutable",
                  name: "proof",
                  nameLocation: "3344:5:6",
                  nodeType: "VariableDeclaration",
                  scope: 1674,
                  src: "3327:22:6",
                  stateVariable: false,
                  storageLocation: "memory",
                  typeDescriptions: {
                    typeIdentifier: "t_array$_t_bytes32_$dyn_memory_ptr",
                    typeString: "bytes32[]",
                  },
                  typeName: {
                    baseType: {
                      id: 1646,
                      name: "bytes32",
                      nodeType: "ElementaryTypeName",
                      src: "3327:7:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bytes32",
                        typeString: "bytes32",
                      },
                    },
                    id: 1647,
                    nodeType: "ArrayTypeName",
                    src: "3327:9:6",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_bytes32_$dyn_storage_ptr",
                      typeString: "bytes32[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3309:41:6",
            },
            returnParameters: {
              id: 1652,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1651,
                  mutability: "mutable",
                  name: "",
                  nameLocation: "-1:-1:-1",
                  nodeType: "VariableDeclaration",
                  scope: 1674,
                  src: "3398:4:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_bool",
                    typeString: "bool",
                  },
                  typeName: {
                    id: 1650,
                    name: "bool",
                    nodeType: "ElementaryTypeName",
                    src: "3398:4:6",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "3397:6:6",
            },
            scope: 1762,
            src: "3278:304:6",
            stateMutability: "pure",
            virtual: false,
            visibility: "internal",
          },
          {
            body: {
              id: 1704,
              nodeType: "Block",
              src: "3796:609:6",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1681,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 1678,
                            name: "_currentDay",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1627,
                            src: "3872:11:6",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$__$returns$_t_uint256_$",
                              typeString: "function () view returns (uint256)",
                            },
                          },
                          id: 1679,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "3872:13:6",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: ">",
                        rightExpression: {
                          id: 1680,
                          name: "CLAIM_PHASE_DAYS",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1557,
                          src: "3888:16:6",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "3872:32:6",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "436c61696d20706861736520686173206e6f7420656e6465642e",
                        id: 1682,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "3906:28:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d",
                          typeString:
                            'literal_string "Claim phase has not ended."',
                        },
                        value: "Claim phase has not ended.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_9abc5011a586f579ee0d6599eb4b6b6f687ae49d9ecbb3fb63eebf9981a5ce2d",
                          typeString:
                            'literal_string "Claim phase has not ended."',
                        },
                      ],
                      id: 1677,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "3864:7:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1683,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "3864:71:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1684,
                  nodeType: "ExpressionStatement",
                  src: "3864:71:6",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1687,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "UnaryOperation",
                        operator: "!",
                        prefix: true,
                        src: "4023:16:6",
                        subExpression: {
                          id: 1686,
                          name: "_BaTokensMinted",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1564,
                          src: "4024:15:6",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "42656e65766f6c656e74204164647265737320546f6b656e73206861766520616c7265616479206265656e206d696e7465642e",
                        id: 1688,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4041:53:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca",
                          typeString:
                            'literal_string "Benevolent Address Tokens have already been minted."',
                        },
                        value:
                          "Benevolent Address Tokens have already been minted.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_71d522ba732fd339a2fd7db23ddbd7101f0bd8714d0a460708a6e27ecf00baca",
                          typeString:
                            'literal_string "Benevolent Address Tokens have already been minted."',
                        },
                      ],
                      id: 1685,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4015:7:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1689,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4015:80:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1690,
                  nodeType: "ExpressionStatement",
                  src: "4015:80:6",
                },
                {
                  expression: {
                    id: 1693,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 1691,
                      name: "_BaTokensMinted",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1564,
                      src: "4175:15:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 1692,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "4193:4:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "4175:22:6",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 1694,
                  nodeType: "ExpressionStatement",
                  src: "4175:22:6",
                },
                {
                  assignments: [1696],
                  declarations: [
                    {
                      constant: false,
                      id: 1696,
                      mutability: "mutable",
                      name: "tokenPayout",
                      nameLocation: "4306:11:6",
                      nodeType: "VariableDeclaration",
                      scope: 1704,
                      src: "4298:19:6",
                      stateVariable: false,
                      storageLocation: "default",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                      typeName: {
                        id: 1695,
                        name: "uint256",
                        nodeType: "ElementaryTypeName",
                        src: "4298:7:6",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                      visibility: "internal",
                    },
                  ],
                  id: 1698,
                  initialValue: {
                    hexValue: "31303030",
                    id: 1697,
                    isConstant: false,
                    isLValue: false,
                    isPure: true,
                    kind: "number",
                    lValueRequested: false,
                    nodeType: "Literal",
                    src: "4320:4:6",
                    typeDescriptions: {
                      typeIdentifier: "t_rational_1000_by_1",
                      typeString: "int_const 1000",
                    },
                    value: "1000",
                  },
                  nodeType: "VariableDeclarationStatement",
                  src: "4298:26:6",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1700,
                        name: "BENEVOLANT_ADDR",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1554,
                        src: "4369:15:6",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        id: 1701,
                        name: "tokenPayout",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1696,
                        src: "4386:11:6",
                        typeDescriptions: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                      ],
                      id: 1699,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1216,
                      src: "4363:5:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 1702,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4363:35:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1703,
                  nodeType: "ExpressionStatement",
                  src: "4363:35:6",
                },
              ],
            },
            functionSelector: "66b9a4bb",
            id: 1705,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "mintBaTokens",
            nameLocation: "3760:12:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1675,
              nodeType: "ParameterList",
              parameters: [],
              src: "3772:2:6",
            },
            returnParameters: {
              id: 1676,
              nodeType: "ParameterList",
              parameters: [],
              src: "3796:0:6",
            },
            scope: 1762,
            src: "3751:654:6",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
          {
            body: {
              id: 1760,
              nodeType: "Block",
              src: "4830:586:6",
              statements: [
                {
                  expression: {
                    arguments: [
                      {
                        commonType: {
                          typeIdentifier: "t_uint256",
                          typeString: "uint256",
                        },
                        id: 1717,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        leftExpression: {
                          arguments: [],
                          expression: {
                            argumentTypes: [],
                            id: 1714,
                            name: "_currentDay",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1627,
                            src: "4848:11:6",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_function_internal_view$__$returns$_t_uint256_$",
                              typeString: "function () view returns (uint256)",
                            },
                          },
                          id: 1715,
                          isConstant: false,
                          isLValue: false,
                          isPure: false,
                          kind: "functionCall",
                          lValueRequested: false,
                          names: [],
                          nodeType: "FunctionCall",
                          src: "4848:13:6",
                          tryCall: false,
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        nodeType: "BinaryOperation",
                        operator: "<=",
                        rightExpression: {
                          id: 1716,
                          name: "CLAIM_PHASE_DAYS",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1557,
                          src: "4865:16:6",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        src: "4848:33:6",
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "436c61696d2070686173652068617320656e6465642e",
                        id: 1718,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4883:24:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03",
                          typeString: 'literal_string "Claim phase has ended."',
                        },
                        value: "Claim phase has ended.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_52acb5e72336846460a7a02b144aa213f888adfb641628b0dad2d021f2ba6a03",
                          typeString: 'literal_string "Claim phase has ended."',
                        },
                      ],
                      id: 1713,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4840:7:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1719,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4840:68:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1720,
                  nodeType: "ExpressionStatement",
                  src: "4840:68:6",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1725,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        nodeType: "UnaryOperation",
                        operator: "!",
                        prefix: true,
                        src: "4926:15:6",
                        subExpression: {
                          baseExpression: {
                            id: 1722,
                            name: "hasClaimed",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1569,
                            src: "4927:10:6",
                            typeDescriptions: {
                              typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                              typeString: "mapping(address => bool)",
                            },
                          },
                          id: 1724,
                          indexExpression: {
                            id: 1723,
                            name: "to",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1707,
                            src: "4938:2:6",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          isConstant: false,
                          isLValue: true,
                          isPure: false,
                          lValueRequested: false,
                          nodeType: "IndexAccess",
                          src: "4927:14:6",
                          typeDescriptions: {
                            typeIdentifier: "t_bool",
                            typeString: "bool",
                          },
                        },
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "416464726573732068617320616c726561647920636c61696d65642e",
                        id: 1726,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "4943:30:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9",
                          typeString:
                            'literal_string "Address has already claimed."',
                        },
                        value: "Address has already claimed.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_0cab26bd6c4b823e0af7bb4d869844644caa9d254d1678766c9a3687bcb542b9",
                          typeString:
                            'literal_string "Address has already claimed."',
                        },
                      ],
                      id: 1721,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4918:7:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1727,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4918:56:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1728,
                  nodeType: "ExpressionStatement",
                  src: "4918:56:6",
                },
                {
                  expression: {
                    arguments: [
                      {
                        arguments: [
                          {
                            id: 1731,
                            name: "to",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1707,
                            src: "5015:2:6",
                            typeDescriptions: {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                          },
                          {
                            id: 1732,
                            name: "proof",
                            nodeType: "Identifier",
                            overloadedDeclarations: [],
                            referencedDeclaration: 1710,
                            src: "5019:5:6",
                            typeDescriptions: {
                              typeIdentifier:
                                "t_array$_t_bytes32_$dyn_calldata_ptr",
                              typeString: "bytes32[] calldata",
                            },
                          },
                        ],
                        expression: {
                          argumentTypes: [
                            {
                              typeIdentifier: "t_address",
                              typeString: "address",
                            },
                            {
                              typeIdentifier:
                                "t_array$_t_bytes32_$dyn_calldata_ptr",
                              typeString: "bytes32[] calldata",
                            },
                          ],
                          id: 1730,
                          name: "_hexAddressIsClaimable",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1674,
                          src: "4992:22:6",
                          typeDescriptions: {
                            typeIdentifier:
                              "t_function_internal_pure$_t_address_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bool_$",
                            typeString:
                              "function (address,bytes32[] memory) pure returns (bool)",
                          },
                        },
                        id: 1733,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        kind: "functionCall",
                        lValueRequested: false,
                        names: [],
                        nodeType: "FunctionCall",
                        src: "4992:33:6",
                        tryCall: false,
                        typeDescriptions: {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                      },
                      {
                        hexValue:
                          "4845582041646472657373206973206e6f7420636c61696d61626c652e",
                        id: 1734,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "string",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5027:31:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52",
                          typeString:
                            'literal_string "HEX Address is not claimable."',
                        },
                        value: "HEX Address is not claimable.",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_bool",
                          typeString: "bool",
                        },
                        {
                          typeIdentifier:
                            "t_stringliteral_7d7fea2f4778c29deb2a043a0eadc278799bce56c8652e282221a28378e70c52",
                          typeString:
                            'literal_string "HEX Address is not claimable."',
                        },
                      ],
                      id: 1729,
                      name: "require",
                      nodeType: "Identifier",
                      overloadedDeclarations: [4294967278, 4294967278],
                      referencedDeclaration: 4294967278,
                      src: "4984:7:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        typeString: "function (bool,string memory) pure",
                      },
                    },
                    id: 1735,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "4984:75:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1736,
                  nodeType: "ExpressionStatement",
                  src: "4984:75:6",
                },
                {
                  expression: {
                    id: 1741,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      baseExpression: {
                        id: 1737,
                        name: "hasClaimed",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1569,
                        src: "5108:10:6",
                        typeDescriptions: {
                          typeIdentifier: "t_mapping$_t_address_$_t_bool_$",
                          typeString: "mapping(address => bool)",
                        },
                      },
                      id: 1739,
                      indexExpression: {
                        id: 1738,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1707,
                        src: "5119:2:6",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      isConstant: false,
                      isLValue: true,
                      isPure: false,
                      lValueRequested: true,
                      nodeType: "IndexAccess",
                      src: "5108:14:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      hexValue: "74727565",
                      id: 1740,
                      isConstant: false,
                      isLValue: false,
                      isPure: true,
                      kind: "bool",
                      lValueRequested: false,
                      nodeType: "Literal",
                      src: "5125:4:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bool",
                        typeString: "bool",
                      },
                      value: "true",
                    },
                    src: "5108:21:6",
                    typeDescriptions: {
                      typeIdentifier: "t_bool",
                      typeString: "bool",
                    },
                  },
                  id: 1742,
                  nodeType: "ExpressionStatement",
                  src: "5108:21:6",
                },
                {
                  expression: {
                    id: 1748,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    lValueRequested: false,
                    leftHandSide: {
                      id: 1743,
                      name: "_numberOfClaims",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1562,
                      src: "5190:15:6",
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    nodeType: "Assignment",
                    operator: "=",
                    rightHandSide: {
                      arguments: [
                        {
                          hexValue: "31",
                          id: 1746,
                          isConstant: false,
                          isLValue: false,
                          isPure: true,
                          kind: "number",
                          lValueRequested: false,
                          nodeType: "Literal",
                          src: "5228:1:6",
                          typeDescriptions: {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                          value: "1",
                        },
                      ],
                      expression: {
                        argumentTypes: [
                          {
                            typeIdentifier: "t_rational_1_by_1",
                            typeString: "int_const 1",
                          },
                        ],
                        expression: {
                          id: 1744,
                          name: "_numberOfClaims",
                          nodeType: "Identifier",
                          overloadedDeclarations: [],
                          referencedDeclaration: 1562,
                          src: "5208:15:6",
                          typeDescriptions: {
                            typeIdentifier: "t_uint256",
                            typeString: "uint256",
                          },
                        },
                        id: 1745,
                        isConstant: false,
                        isLValue: false,
                        isPure: false,
                        lValueRequested: false,
                        memberName: "add",
                        nodeType: "MemberAccess",
                        referencedDeclaration: 677,
                        src: "5208:19:6",
                        typeDescriptions: {
                          typeIdentifier:
                            "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          typeString:
                            "function (uint256,uint256) pure returns (uint256)",
                        },
                      },
                      id: 1747,
                      isConstant: false,
                      isLValue: false,
                      isPure: false,
                      kind: "functionCall",
                      lValueRequested: false,
                      names: [],
                      nodeType: "FunctionCall",
                      src: "5208:22:6",
                      tryCall: false,
                      typeDescriptions: {
                        typeIdentifier: "t_uint256",
                        typeString: "uint256",
                      },
                    },
                    src: "5190:40:6",
                    typeDescriptions: {
                      typeIdentifier: "t_uint256",
                      typeString: "uint256",
                    },
                  },
                  id: 1749,
                  nodeType: "ExpressionStatement",
                  src: "5190:40:6",
                },
                {
                  expression: {
                    arguments: [
                      {
                        id: 1751,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1707,
                        src: "5341:2:6",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        hexValue: "31303030",
                        id: 1752,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5345:4:6",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1000_by_1",
                          typeString: "int_const 1000",
                        },
                        value: "1000",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_rational_1000_by_1",
                          typeString: "int_const 1000",
                        },
                      ],
                      id: 1750,
                      name: "_mint",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1216,
                      src: "5335:5:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 1753,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5335:15:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1754,
                  nodeType: "ExpressionStatement",
                  src: "5335:15:6",
                },
                {
                  eventCall: {
                    arguments: [
                      {
                        id: 1756,
                        name: "to",
                        nodeType: "Identifier",
                        overloadedDeclarations: [],
                        referencedDeclaration: 1707,
                        src: "5400:2:6",
                        typeDescriptions: {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                      },
                      {
                        hexValue: "31303030",
                        id: 1757,
                        isConstant: false,
                        isLValue: false,
                        isPure: true,
                        kind: "number",
                        lValueRequested: false,
                        nodeType: "Literal",
                        src: "5404:4:6",
                        typeDescriptions: {
                          typeIdentifier: "t_rational_1000_by_1",
                          typeString: "int_const 1000",
                        },
                        value: "1000",
                      },
                    ],
                    expression: {
                      argumentTypes: [
                        {
                          typeIdentifier: "t_address",
                          typeString: "address",
                        },
                        {
                          typeIdentifier: "t_rational_1000_by_1",
                          typeString: "int_const 1000",
                        },
                      ],
                      id: 1755,
                      name: "Claim",
                      nodeType: "Identifier",
                      overloadedDeclarations: [],
                      referencedDeclaration: 1576,
                      src: "5394:5:6",
                      typeDescriptions: {
                        typeIdentifier:
                          "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        typeString: "function (address,uint256)",
                      },
                    },
                    id: 1758,
                    isConstant: false,
                    isLValue: false,
                    isPure: false,
                    kind: "functionCall",
                    lValueRequested: false,
                    names: [],
                    nodeType: "FunctionCall",
                    src: "5394:15:6",
                    tryCall: false,
                    typeDescriptions: {
                      typeIdentifier: "t_tuple$__$",
                      typeString: "tuple()",
                    },
                  },
                  id: 1759,
                  nodeType: "EmitStatement",
                  src: "5389:20:6",
                },
              ],
            },
            functionSelector: "d7aada81",
            id: 1761,
            implemented: true,
            kind: "function",
            modifiers: [],
            name: "claim",
            nameLocation: "4765:5:6",
            nodeType: "FunctionDefinition",
            parameters: {
              id: 1711,
              nodeType: "ParameterList",
              parameters: [
                {
                  constant: false,
                  id: 1707,
                  mutability: "mutable",
                  name: "to",
                  nameLocation: "4779:2:6",
                  nodeType: "VariableDeclaration",
                  scope: 1761,
                  src: "4771:10:6",
                  stateVariable: false,
                  storageLocation: "default",
                  typeDescriptions: {
                    typeIdentifier: "t_address",
                    typeString: "address",
                  },
                  typeName: {
                    id: 1706,
                    name: "address",
                    nodeType: "ElementaryTypeName",
                    src: "4771:7:6",
                    stateMutability: "nonpayable",
                    typeDescriptions: {
                      typeIdentifier: "t_address",
                      typeString: "address",
                    },
                  },
                  visibility: "internal",
                },
                {
                  constant: false,
                  id: 1710,
                  mutability: "mutable",
                  name: "proof",
                  nameLocation: "4802:5:6",
                  nodeType: "VariableDeclaration",
                  scope: 1761,
                  src: "4783:24:6",
                  stateVariable: false,
                  storageLocation: "calldata",
                  typeDescriptions: {
                    typeIdentifier: "t_array$_t_bytes32_$dyn_calldata_ptr",
                    typeString: "bytes32[]",
                  },
                  typeName: {
                    baseType: {
                      id: 1708,
                      name: "bytes32",
                      nodeType: "ElementaryTypeName",
                      src: "4783:7:6",
                      typeDescriptions: {
                        typeIdentifier: "t_bytes32",
                        typeString: "bytes32",
                      },
                    },
                    id: 1709,
                    nodeType: "ArrayTypeName",
                    src: "4783:9:6",
                    typeDescriptions: {
                      typeIdentifier: "t_array$_t_bytes32_$dyn_storage_ptr",
                      typeString: "bytes32[]",
                    },
                  },
                  visibility: "internal",
                },
              ],
              src: "4770:38:6",
            },
            returnParameters: {
              id: 1712,
              nodeType: "ParameterList",
              parameters: [],
              src: "4830:0:6",
            },
            scope: 1762,
            src: "4756:660:6",
            stateMutability: "nonpayable",
            virtual: false,
            visibility: "external",
          },
        ],
        scope: 1763,
        src: "219:5199:6",
        usedErrors: [],
      },
    ],
    src: "0:5419:6",
  },
  compiler: {
    name: "solc",
    version: "0.8.13+commit.abaa5c0e.Emscripten.clang",
  },
  networks: {
    5777: {
      events: {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "owner",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "spender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Approval",
          type: "event",
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "from",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "to",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "value",
              type: "uint256",
            },
          ],
          name: "Transfer",
          type: "event",
        },
      },
      links: {},
      address: "0x027eBe6c92A2b8804e681456d6E40C05bcaA58b7",
      transactionHash:
        "0x628016f5d3b49314f3f40db6c7edd09d3b3a00ac0905c219acdc289b36c8fa02",
    },
  },
  schemaVersion: "3.4.8",
  updatedAt: "2022-08-12T08:09:03.767Z",
  networkType: "ethereum",
  devdoc: {
    events: {
      "Claim(address,uint256)": {
        details: "Emitted after a successful token claim",
        params: {
          amount: "of tokens claimed",
          to: "recipient of claim",
        },
      },
    },
    kind: "dev",
    methods: {
      "allowance(address,address)": {
        details: "See {IERC20-allowance}.",
      },
      "approve(address,uint256)": {
        details:
          "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.",
      },
      "balanceOf(address)": {
        details: "See {IERC20-balanceOf}.",
      },
      "decreaseAllowance(address,uint256)": {
        details:
          "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.",
      },
      "increaseAllowance(address,uint256)": {
        details:
          "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.",
      },
      "name()": {
        details: "Returns the name of the token.",
      },
      "symbol()": {
        details:
          "Returns the symbol of the token, usually a shorter version of the name.",
      },
      "totalSupply()": {
        details: "See {IERC20-totalSupply}.",
      },
      "transfer(address,uint256)": {
        details:
          "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.",
      },
      "transferFrom(address,address,uint256)": {
        details:
          "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.",
      },
    },
    version: 1,
  },
  userdoc: {
    kind: "user",
    methods: {
      "decimals()": {
        notice: "============== Functions ==============",
      },
      "hasClaimed(address)": {
        notice: "============== Mutable Storage ==============",
      },
    },
    version: 1,
  },
};
